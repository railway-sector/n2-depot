"use strict";(self.webpackChunkn2_depot=self.webpackChunkn2_depot||[]).push([[5411],{35411:(e,t,r)=>{r.d(t,{GridSnappingEngine:()=>Z});var i=r(6326),n=r(91967),o=r(76460),s=r(15941),l=r(31633),a=r(46053),u=(r(81806),r(47249),r(87990)),c=r(20664),d=r(56611),p=r(1438),g=r(68002);var h=r(19247),v=r(23701),f=r(13312),M=r(7137),y=r(80963),S=r(45417);function w(e,t,r){const i=1===e?10:e;return i**(r?Math.round(function(e,t){return Math.log(e)/Math.log(t)}(50/t,i)):0)}var C=r(23862),R=r(70330),P=r(90836),x=r(45633);let Z=class extends n.A{constructor(e){super(e),this.options=null}destroy(){this._set("options",null)}get grid(){return this.view.grid}get effectiveViewRotation(){var e,t;return null!==(e=this.grid)&&void 0!==e&&e.rotateWithMap?0:(0,s.kU)(null!==(t=this.view.rotation)&&void 0!==t?t:0)}get gridRotation(){var e,t;return(0,s.kU)(null!==(e=null===(t=this.grid)||void 0===t?void 0:t.rotation)&&void 0!==e?e:0)}get gridCenter(){const{spatialReference:e,grid:t}=this;if(!t||!e||!(0,d.isLoadedOrLoadFor)(t.center.spatialReference,e))return null;try{var r;const i=(0,d.project)(t.center,e),n=e.isWrappable&&null!=(null===(r=this.view)||void 0===r?void 0:r.center)?(0,p.O7)(i.x,this.view.center.x,e):i.x;return(0,C.vt)(n,i.y,i.z)}catch(i){return o.A.getLogger(this).errorOnce("Grid Snapping - Failed to project grid center.",i),null}}get offsetScaleFactor(){const{pixelsPerStride:e,grid:t}=this;if(!t||!e)return 1;const{majorLineInterval:r,dynamicScaling:i}=t;return r<1?null:w(r,e,i)}get spatialReference(){return this.view.spatialReference}get gridMetersPerStride(){const{grid:e}=this;return e?(0,l.oU)(e.spacing,e.units,"meters"):null}get viewMetersPerPixel(){const{viewMetersPerSRUnit:e}=this;return null==e?null:e*(0,g.i1)(this.view.scale,this.view.spatialReference)}get viewMetersPerSRUnit(){const{spatialReference:e}=this.view;return this.gridCenter?function(e,t,r){var i,n;const o="number"==typeof e?null:e,s=null!==r&&void 0!==r?r:null===o||void 0===o?void 0:o.spatialReference;if(null==s||!(0,y.fn)(s)||function(e){const{isGeographic:t,isWebMercator:r}=e;return!t&&!r}(s))return(0,l.GA)(s);let a=null!==(i=null===o||void 0===o?void 0:o.x)&&void 0!==i?i:e,u=null!==(n=null===o||void 0===o?void 0:o.y)&&void 0!==n?n:t;const c=1/Math.sqrt(2);let d=a+c,g=u+c;const{isWebMercator:w,isGeographic:C}=s;let R=C&&!(0,M.TT)(s)?f.A.WGS84:s;if(w){let e=new h.A({x:a,y:u,spatialReference:s});(0,S.ci)(e,!0,e),a=e.x,u=e.y,e=new h.A({x:d,y:g,spatialReference:s}),(0,S.ci)(e,!0,e),d=e.x,g=e.y,R=f.A.WGS84}const P=new v.A({paths:[[[a,u],[d,g]]],spatialReference:R}),x=(0,p.XX)(P,10);let Z;try{[Z]=(0,M.l1)([x],"meters")}catch(b){return(0,l.GA)(s)}return Z}(this.gridCenter[0],this.gridCenter[1],e):null}get pixelsPerStride(){const{gridMetersPerStride:e,viewMetersPerPixel:t}=this;return t&&e?e/t:null}get updating(){return null!=this.grid&&null!=this.spatialReference&&null==this.viewMetersPerSRUnit}async fetchCandidates(e,t,r){var i;const{options:n,view:o}=this;if(null===n||void 0===n||!n.effectiveGridEnabled||!o.grid||null!==(i=r.feature)&&void 0!==i&&i.attributes&&R.io in r.feature.attributes)return[];const s=r.coordinateHelper.arrayToPoint(e),l=n.distance*("touch"===r.pointer?n.touchSensitivityMultiplier:1);return this.fetchCandidatesSync(s,l)}fetchCandidatesSync(e,t){const r=[],{grid:i,effectiveViewRotation:n,gridRotation:o,gridCenter:s,viewMetersPerPixel:l,viewMetersPerSRUnit:a,offsetScaleFactor:u,spatialReference:c,gridMetersPerStride:p,pixelsPerStride:g}=this;if(!(i&&l&&a&&s&&c&&u&&p&&g))return r;if(!i.dynamicScaling&&g<5)return r;if(!(0,d.isLoadedOrLoadFor)(e.spatialReference,c))return r;const h=(0,d.project)(e,c),v=(0,C.vt)(h.x,h.y,h.z),f=b(v,-o,s,-n),M=p/a*u,y=G(f,M,s),{shouldSnapX:S,shouldSnapY:w}=A(y,f,t,l,a);if(!S&&!w)return[];const R=(0,C.vt)((S?y:f)[0],(w?y:f)[1]),Z=b(R,o,s,n),k=b(y,o,s,n);if(w){const e=U(y,f,M,"y"),t=b(e,o,s,n);r.push(new x.o({lineStart:k,lineEnd:t,targetPoint:Z,isDraped:!1}))}if(S){const e=U(y,f,M,"x"),t=b(e,o,s,n);r.push(new x.o({lineStart:k,lineEnd:t,targetPoint:Z,isDraped:!1}))}return S&&w&&r.push(new P.N(Z,r[0],r[1],!1)),r}};(0,i.Cg)([(0,a.MZ)({constructOnly:!0})],Z.prototype,"view",void 0),(0,i.Cg)([(0,a.MZ)()],Z.prototype,"options",void 0),(0,i.Cg)([(0,a.MZ)()],Z.prototype,"grid",null),(0,i.Cg)([(0,a.MZ)()],Z.prototype,"effectiveViewRotation",null),(0,i.Cg)([(0,a.MZ)()],Z.prototype,"gridRotation",null),(0,i.Cg)([(0,a.MZ)()],Z.prototype,"gridCenter",null),(0,i.Cg)([(0,a.MZ)()],Z.prototype,"offsetScaleFactor",null),(0,i.Cg)([(0,a.MZ)()],Z.prototype,"spatialReference",null),(0,i.Cg)([(0,a.MZ)()],Z.prototype,"gridMetersPerStride",null),(0,i.Cg)([(0,a.MZ)()],Z.prototype,"viewMetersPerPixel",null),(0,i.Cg)([(0,a.MZ)()],Z.prototype,"viewMetersPerSRUnit",null),(0,i.Cg)([(0,a.MZ)()],Z.prototype,"pixelsPerStride",null),(0,i.Cg)([(0,a.MZ)()],Z.prototype,"updating",null),Z=(0,i.Cg)([(0,u.$)("esri.views.interactive.snapping.GridSnappingEngine")],Z);const b=(e,t,r,i)=>{const n=(0,C.Hh)(e[0],e[1],e[2]);return(0,c.K)(n,(0,c.K)(n,n,r,t),r,i)},G=(e,t,r)=>{const i=(e[0]-r[0])/t,n=(e[1]-r[1])/t,o=Math.trunc(i),s=Math.trunc(n),l=Math.round(i%1),a=Math.round(n%1),u=r[0]+(o+l)*t,c=r[1]+(s+a)*t;return(0,C.vt)(u,c)},A=(e,t,r,i,n)=>{if(i<=0)return{shouldSnapX:!1,shouldSnapY:!1};const o=(e[0]-t[0])/i,s=(e[1]-t[1])/i;return{shouldSnapX:Math.abs(o*n)<r,shouldSnapY:Math.abs(s*n)<r}},U=(e,t,r,i)=>{if("y"===i){const i=t[0]>e[0]?1:-1;return(0,C.vt)(e[0]+r*i,e[1])}const n=t[1]>e[1]?1:-1;return(0,C.vt)(e[0],e[1]+r*n)}}}]);
//# sourceMappingURL=5411.2bb085a7.chunk.js.map