"use strict";(self.webpackChunkn2_depot=self.webpackChunkn2_depot||[]).push([[5294],{5294:(e,r,t)=>{t.r(r),t.d(r,{default:()=>B});var s,i=t(89379),o=t(76797),n=t(19247),l=t(62801),a=t(66486),f=t(93982),c=t(52494),p=t(81633),u=t(59844),m=t(86866),d=t(99846),h=t(26855),y=t(6326),x=(t(76460),t(81806),t(47249),t(50076),t(6409)),v=t(87990),g=t(75116);let C=s=class extends g.A{constructor(){super(...arguments),this.type="identity"}clone(){return new s}};(0,y.Cg)([(0,x.e)({IdentityXform:"identity"})],C.prototype,"type",void 0),C=s=(0,y.Cg)([(0,v.$)("esri.layers.support.rasterTransforms.IdentityTransform")],C);var S=t(29754);const w={GCSShiftXform:h.A,IdentityXform:C,PolynomialXform:S.A};function O(e){if(!(null===e||void 0===e?void 0:e.type))return null;const r=w[null===e||void 0===e?void 0:e.type];if(r){const t=new r;return t.read(e),t}return null}var A=t(20118),k=t(46533);function P(e){if(!e)return{result:null,transferList:[]};const{pixelBlock:r,transferList:t}=e.getTransferableObject();return{result:r,transferList:t}}class B{convertVectorFieldData(e){const r=a.A.fromJSON(e.pixelBlock),t=P((0,d.FI)(r,e.type));return Promise.resolve(t)}convertPixelBlockToFeatures(e){const r=(0,c.L)({pixelBlock:a.A.fromJSON(e.pixelBlock),extent:o.A.fromJSON(e.extent),fieldNames:e.fieldNames,skipFactor:e.skipFactor,skipSpatialReference:!0,pixelIdOffset:e.pixelIdOffset,imageRowSize:e.imageRowSize});return Promise.resolve(r)}computeStatisticsHistograms(e){const r=a.A.fromJSON(e.pixelBlock),t=(0,m.eH)(r,{histogramSize:e.histogramSize,includeSkewnessKurtosis:e.includeSkewnessKurtosis});return Promise.resolve(t)}async decode(e){return P(await(0,f.D)(e.data,e.options))}symbolize(e){e.pixelBlock=a.A.fromJSON(e.pixelBlock),e.extent=e.extent?o.A.fromJSON(e.extent):null;const r=P(this.symbolizer.symbolize(e));return Promise.resolve(r)}highlightPixels(e){const r=a.A.fromJSON(e.pixelBlock),t=a.A.fromJSON(e.renderedPixelBlock);return(0,c._F)(r,t,e.highlightOptions),Promise.resolve(t.toJSON())}async updateSymbolizer(e){var r;this.symbolizer=A.A.fromJSON(e.symbolizerJSON),e.histograms&&"rasterStretch"===(null===(r=this.symbolizer)||void 0===r?void 0:r.rendererJSON.type)&&(this.symbolizer.rendererJSON.histograms=e.histograms)}async updateRasterFunction(e){this.rasterFunction=(0,p.vt)(e.rasterFunctionJSON)}async process(e){var r;return P(this.rasterFunction.process({extent:o.A.fromJSON(e.extent),primaryPixelBlocks:e.primaryPixelBlocks.map(e=>null!=e?a.A.fromJSON(e):null),primaryPixelSizes:null===(r=e.primaryPixelSizes)||void 0===r?void 0:r.map(e=>null!=e?n.A.fromJSON(e):null),primaryRasterIds:e.primaryRasterIds}))}stretch(e){const r=P(this.symbolizer.simpleStretch(a.A.fromJSON(e.srcPixelBlock),e.stretchParams));return Promise.resolve(r)}estimateStatisticsHistograms(e){const r=(0,m.f4)(a.A.fromJSON(e.srcPixelBlock));return Promise.resolve(r)}split(e){var r;const t=(0,c.lD)(a.A.fromJSON(e.srcPixelBlock),e.tileSize,null!==(r=e.maximumPyramidLevel)&&void 0!==r?r:0,!1===e.useBilinear),s=[];let i;return t&&(i=new Map,t.forEach((e,r)=>{if(e){const{pixelBlock:t,transferList:o}=e.getTransferableObject();i.set(r,t),o.forEach(e=>{s.includes(e)||s.push(e)})}})),Promise.resolve({result:i,transferList:s})}clipTile(e){const r=a.A.fromJSON(e.pixelBlock),t=P((0,c.J$)((0,i.A)((0,i.A)({},e),{},{pixelBlock:r})));return Promise.resolve(t)}async mosaicAndTransform(e){const r=e.srcPixelBlocks.map(e=>e?new a.A(e):null),t=(0,c.z7)(r,e.srcMosaicSize,{blockWidths:e.blockWidths,alignmentInfo:e.alignmentInfo,clipOffset:e.clipOffset,clipSize:e.clipSize});let s,i=t;e.coefs&&(i=(0,c.$i)(t,e.destDimension,e.coefs,e.sampleSpacing,e.interpolation)),e.projectDirections&&e.gcsGrid&&(s=(0,c.QF)(e.destDimension,e.gcsGrid),i=(0,d.Y2)(i,e.isUV?"vector-uv":"vector-magdir",s));const{result:o,transferList:n}=P(i);return{result:{pixelBlock:o,localNorthDirections:s},transferList:n}}async createFlowMesh(e,r){const t={data:new Float32Array(e.flowData.buffer),mask:new Uint8Array(e.flowData.maskBuffer),width:e.flowData.width,height:e.flowData.height},{vertexData:s,indexData:i}=await(0,k.CW)(e.meshType,e.simulationSettings,t,r.signal);return{result:{vertexBuffer:s.buffer,indexBuffer:i.buffer},transferList:[s.buffer,i.buffer]}}async getProjectionOffsetGrid(e){var r;const t=o.A.fromJSON(e.projectedExtent),s=o.A.fromJSON(e.srcBufferExtent);let n=null;null!==(r=e.datumTransformationSteps)&&void 0!==r&&r.length&&(n=new l.A({steps:e.datumTransformationSteps})),await(0,u.Hh)();const a=e.rasterTransform?O(e.rasterTransform):null;return(0,u.l0)((0,i.A)((0,i.A)({},e),{},{projectedExtent:t,srcBufferExtent:s,datumTransformation:n,rasterTransform:a}))}}},26855:(e,r,t)=>{t.d(r,{A:()=>f});var s,i=t(6326),o=t(46053),n=(t(81806),t(76460),t(47249),t(6409)),l=t(87990),a=t(75116);let f=s=class extends a.A{constructor(){super(...arguments),this.type="gcs-shift",this.tolerance=1e-8}forwardTransform(e){return"point"===(e=e.clone()).type?(e.x>180+this.tolerance&&(e.x-=360),e):(e.xmin>=180-this.tolerance?(e.xmax-=360,e.xmin-=360):e.xmax>180+this.tolerance&&(e.xmin=-180,e.xmax=180),e)}inverseTransform(e){return"point"===(e=e.clone()).type?(e.x<-this.tolerance&&(e.x+=360),e):(e.xmin<-this.tolerance&&(e.xmin+=360,e.xmax+=360),e)}clone(){return new s({tolerance:this.tolerance})}};(0,i.Cg)([(0,n.e)({GCSShiftXform:"gcs-shift"})],f.prototype,"type",void 0),(0,i.Cg)([(0,o.MZ)()],f.prototype,"tolerance",void 0),f=s=(0,i.Cg)([(0,l.$)("esri.layers.support.rasterTransforms.GCSShiftTransform")],f)},29754:(e,r,t)=>{t.d(r,{A:()=>h});var s,i=t(6326),o=t(46053),n=(t(81806),t(76460),t(47249),t(6409)),l=t(28379),a=t(87990),f=t(17707),c=t(76797),p=t(19247),u=t(75116);function m(e,r,t){const{x:s,y:i}=r;if(t<2)return{x:e[0]+s*e[2]+i*e[4],y:e[1]+s*e[3]+i*e[5]};if(2===t){const r=s*s,t=i*i,o=s*i;return{x:e[0]+s*e[2]+i*e[4]+r*e[6]+o*e[8]+t*e[10],y:e[1]+s*e[3]+i*e[5]+r*e[7]+o*e[9]+t*e[11]}}const o=s*s,n=i*i,l=s*i,a=o*s,f=o*i,c=s*n,p=i*n;return{x:e[0]+s*e[2]+i*e[4]+o*e[6]+l*e[8]+n*e[10]+a*e[12]+f*e[14]+c*e[16]+p*e[18],y:e[1]+s*e[3]+i*e[5]+o*e[7]+l*e[9]+n*e[11]+a*e[13]+f*e[15]+c*e[17]+p*e[19]}}function d(e,r,t){const{xmin:s,ymin:i,xmax:o,ymax:n,spatialReference:l}=r;let a=[];if(t<2)a.push({x:s,y:n}),a.push({x:o,y:n}),a.push({x:s,y:i}),a.push({x:o,y:i});else{let e=10;for(let r=0;r<e;r++)a.push({x:s,y:i+(n-i)*r/(e-1)}),a.push({x:o,y:i+(n-i)*r/(e-1)});e=8;for(let r=1;r<=e;r++)a.push({x:s+(o-s)*r/e,y:i}),a.push({x:s+(o-s)*r/e,y:n})}a=a.map(r=>m(e,r,t));const f=a.map(e=>e.x),p=a.map(e=>e.y);return new c.A({xmin:Math.min.apply(null,f),xmax:Math.max.apply(null,f),ymin:Math.min.apply(null,p),ymax:Math.max.apply(null,p),spatialReference:l})}let h=s=class extends u.A{constructor(){super(...arguments),this.polynomialOrder=1,this.type="polynomial"}readForwardCoefficients(e,r){const{coeffX:t,coeffY:s}=r;if(null===t||void 0===t||!t.length||null===s||void 0===s||!s.length||t.length!==s.length)return null;const i=[];for(let o=0;o<t.length;o++)i.push(t[o]),i.push(s[o]);return i}writeForwardCoefficients(e,r,t){const s=[],i=[];for(let o=0;o<(null===e||void 0===e?void 0:e.length);o++)o%2==0?s.push(e[o]):i.push(e[o]);r.coeffX=s,r.coeffY=i}get inverseCoefficients(){let e=this._get("inverseCoefficients");const r=this._get("forwardCoefficients");return!e&&r&&this.polynomialOrder<2&&(e=function(e){const[r,t,s,i,o,n]=e,l=s*n-o*i,a=o*i-s*n;return[(o*t-r*n)/l,(s*t-r*i)/a,n/l,i/a,-o/l,-s/a]}(r)),e}set inverseCoefficients(e){this._set("inverseCoefficients",e)}readInverseCoefficients(e,r){const{inverseCoeffX:t,inverseCoeffY:s}=r;if(null===t||void 0===t||!t.length||null===s||void 0===s||!s.length||t.length!==s.length)return null;const i=[];for(let o=0;o<t.length;o++)i.push(t[o]),i.push(s[o]);return i}writeInverseCoefficients(e,r,t){const s=[],i=[];for(let o=0;o<(null===e||void 0===e?void 0:e.length);o++)o%2==0?s.push(e[o]):i.push(e[o]);r.inverseCoeffX=s,r.inverseCoeffY=i}get affectsPixelSize(){return this.polynomialOrder>0}forwardTransform(e){if("point"===e.type){const r=m(this.forwardCoefficients,e,this.polynomialOrder);return new p.A({x:r.x,y:r.y,spatialReference:e.spatialReference})}return d(this.forwardCoefficients,e,this.polynomialOrder)}inverseTransform(e){if("point"===e.type){const r=m(this.inverseCoefficients,e,this.polynomialOrder);return new p.A({x:r.x,y:r.y,spatialReference:e.spatialReference})}return d(this.inverseCoefficients,e,this.polynomialOrder)}clone(){return new s({polynomialOrder:this.polynomialOrder,forwardCoefficients:this.forwardCoefficients?[...this.forwardCoefficients]:null,inverseCoefficients:this.inverseCoefficients?[...this.inverseCoefficients]:null})}};(0,i.Cg)([(0,o.MZ)({json:{write:!0}})],h.prototype,"polynomialOrder",void 0),(0,i.Cg)([(0,o.MZ)()],h.prototype,"forwardCoefficients",void 0),(0,i.Cg)([(0,l.w)("forwardCoefficients",["coeffX","coeffY"])],h.prototype,"readForwardCoefficients",null),(0,i.Cg)([(0,f.K)("forwardCoefficients")],h.prototype,"writeForwardCoefficients",null),(0,i.Cg)([(0,o.MZ)({json:{write:!0}})],h.prototype,"inverseCoefficients",null),(0,i.Cg)([(0,l.w)("inverseCoefficients",["inverseCoeffX","inverseCoeffY"])],h.prototype,"readInverseCoefficients",null),(0,i.Cg)([(0,f.K)("inverseCoefficients")],h.prototype,"writeInverseCoefficients",null),(0,i.Cg)([(0,o.MZ)()],h.prototype,"affectsPixelSize",null),(0,i.Cg)([(0,n.e)({PolynomialXform:"polynomial"})],h.prototype,"type",void 0),h=s=(0,i.Cg)([(0,a.$)("esri.layers.support.rasterTransforms.PolynomialTransform")],h)},75116:(e,r,t)=>{t.d(r,{A:()=>l});var s=t(6326),i=t(42553),o=t(46053),n=(t(81806),t(76460),t(47249),t(87990));let l=class extends i.o{get affectsPixelSize(){return!1}forwardTransform(e){return e}inverseTransform(e){return e}};(0,s.Cg)([(0,o.MZ)()],l.prototype,"affectsPixelSize",null),(0,s.Cg)([(0,o.MZ)({json:{write:!0}})],l.prototype,"spatialReference",void 0),l=(0,s.Cg)([(0,n.$)("esri.layers.support.rasterTransforms.BaseRasterTransform")],l)}}]);
//# sourceMappingURL=5294.3d4b692a.chunk.js.map