{"version":3,"file":"static/js/4659.2e116256.chunk.js","mappings":"iKAIyC,MAAMA,EAAEC,WAAAA,CAAYD,GAAGE,KAAKC,KAAKH,EAAEE,KAAKE,KAAK,uBAAuBF,KAAKG,SAAS,YAAY,EAAE,SAASC,EAAEN,GAAG,MAAM,0BAA0B,OAADA,QAAC,IAADA,OAAC,EAADA,EAAGI,KAAI,CAACG,eAAeC,EAAER,GAAG,MAAMM,EAAE,IAAIG,KAAK,CAACT,IAAIQ,QAAQF,EAAEI,OAAO,OAAOC,KAAKC,MAAMJ,EAAE,CAACD,eAAeM,EAAEP,EAAEE,GAAG,GAAG,eAAeA,EAAE,OAAO,IAAIR,EAAEM,GAAG,MAAMO,EAAE,IAAIJ,KAAK,CAACH,GAAG,CAACF,KAAKI,IAAI,IAAIM,EAAEC,IAAIC,gBAAgBH,GAAG,OAAOL,GAAG,IAAI,aAAaM,GAAG,QAAQ,MAAM,IAAI,YAAYA,GAAG,QAAQ,MAAMG,EAAE,IAAIC,MAAM,IAAGC,EAAAA,EAAAA,GAAI,eAAe,OAAO,IAAIC,QAAQ,CAACpB,EAAEM,KAAK,MAAME,EAAEA,KAAKa,IAAIrB,EAAEiB,IAAIJ,EAAEb,IAAIqB,IAAIf,EAAEN,IAAIqB,EAAEA,KAAKN,IAAIO,gBAAgBR,GAAGG,EAAEM,oBAAoB,OAAOf,GAAGS,EAAEM,oBAAoB,QAAQV,IAAII,EAAEO,iBAAiB,OAAOhB,GAAGS,EAAEO,iBAAiB,QAAQX,GAAGI,EAAEQ,IAAIX,IAAI,IAAIG,EAAEQ,IAAIX,QAAQG,EAAES,QAAQ,CAAC,MAAML,GAAGM,QAAQC,KAAK,mCAAmC,CAAC,OAAOb,IAAIO,gBAAgBR,GAAGG,CAAC,C","sources":["../node_modules/@arcgis/core/views/3d/glTF/internal/resourceUtils.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.34/esri/copyright.txt for details.\n*/\nimport has from\"../../../../core/has.js\";class e{constructor(e){this.data=e,this.type=\"encoded-mesh-texture\",this.encoding=\"image/ktx2\"}}function t(e){return\"encoded-mesh-texture\"===e?.type}async function n(e){const t=new Blob([e]),n=await t.text();return JSON.parse(n)}async function r(t,n){if(\"image/ktx2\"===n)return new e(t);const r=new Blob([t],{type:n});let o=URL.createObjectURL(r);switch(n){case\"image/jpeg\":o+=\"#.jpg\";break;case\"image/png\":o+=\"#.png\"}const c=new Image;if(has(\"esri-iPhone\"))return new Promise((e,t)=>{const n=()=>{s(),e(c)},r=e=>{s(),t(e)},s=()=>{URL.revokeObjectURL(o),c.removeEventListener(\"load\",n),c.removeEventListener(\"error\",r)};c.addEventListener(\"load\",n),c.addEventListener(\"error\",r),c.src=o});try{c.src=o,await c.decode()}catch(s){console.warn(\"Failed decoding HTMLImageElement\")}return URL.revokeObjectURL(o),c}export{e as EncodedMeshTexture,r as imageFromBinaryData,t as isEncodedMeshTexture,n as jsonFromBinaryData};\n"],"names":["e","constructor","this","data","type","encoding","t","async","n","Blob","text","JSON","parse","r","o","URL","createObjectURL","c","Image","has","Promise","s","revokeObjectURL","removeEventListener","addEventListener","src","decode","console","warn"],"sourceRoot":""}