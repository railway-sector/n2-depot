{"version":3,"file":"static/js/809.30ffe856.chunk.js","mappings":"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","sources":["../node_modules/d3-shape/src/constant.js","../node_modules/d3-path/src/path.js","../node_modules/d3-shape/src/path.js","../node_modules/d3-shape/src/array.js","../node_modules/d3-shape/src/curve/linear.js","../node_modules/d3-shape/src/point.js","../node_modules/d3-shape/src/line.js","../node_modules/d3-shape/src/area.js","../node_modules/src/.internal/charts/xy/series/LineSeries.ts","../node_modules/src/.internal/charts/xy/XYCursor.ts"],"sourcesContent":["export default function(x) {\n  return function constant() {\n    return x;\n  };\n}\n","const pi = Math.PI,\n    tau = 2 * pi,\n    epsilon = 1e-6,\n    tauEpsilon = tau - epsilon;\n\nfunction append(strings) {\n  this._ += strings[0];\n  for (let i = 1, n = strings.length; i < n; ++i) {\n    this._ += arguments[i] + strings[i];\n  }\n}\n\nfunction appendRound(digits) {\n  let d = Math.floor(digits);\n  if (!(d >= 0)) throw new Error(`invalid digits: ${digits}`);\n  if (d > 15) return append;\n  const k = 10 ** d;\n  return function(strings) {\n    this._ += strings[0];\n    for (let i = 1, n = strings.length; i < n; ++i) {\n      this._ += Math.round(arguments[i] * k) / k + strings[i];\n    }\n  };\n}\n\nexport class Path {\n  constructor(digits) {\n    this._x0 = this._y0 = // start of current subpath\n    this._x1 = this._y1 = null; // end of current subpath\n    this._ = \"\";\n    this._append = digits == null ? append : appendRound(digits);\n  }\n  moveTo(x, y) {\n    this._append`M${this._x0 = this._x1 = +x},${this._y0 = this._y1 = +y}`;\n  }\n  closePath() {\n    if (this._x1 !== null) {\n      this._x1 = this._x0, this._y1 = this._y0;\n      this._append`Z`;\n    }\n  }\n  lineTo(x, y) {\n    this._append`L${this._x1 = +x},${this._y1 = +y}`;\n  }\n  quadraticCurveTo(x1, y1, x, y) {\n    this._append`Q${+x1},${+y1},${this._x1 = +x},${this._y1 = +y}`;\n  }\n  bezierCurveTo(x1, y1, x2, y2, x, y) {\n    this._append`C${+x1},${+y1},${+x2},${+y2},${this._x1 = +x},${this._y1 = +y}`;\n  }\n  arcTo(x1, y1, x2, y2, r) {\n    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(`negative radius: ${r}`);\n\n    let x0 = this._x1,\n        y0 = this._y1,\n        x21 = x2 - x1,\n        y21 = y2 - y1,\n        x01 = x0 - x1,\n        y01 = y0 - y1,\n        l01_2 = x01 * x01 + y01 * y01;\n\n    // Is this path empty? Move to (x1,y1).\n    if (this._x1 === null) {\n      this._append`M${this._x1 = x1},${this._y1 = y1}`;\n    }\n\n    // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n    else if (!(l01_2 > epsilon));\n\n    // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n    // Equivalently, is (x1,y1) coincident with (x2,y2)?\n    // Or, is the radius zero? Line to (x1,y1).\n    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon) || !r) {\n      this._append`L${this._x1 = x1},${this._y1 = y1}`;\n    }\n\n    // Otherwise, draw an arc!\n    else {\n      let x20 = x2 - x0,\n          y20 = y2 - y0,\n          l21_2 = x21 * x21 + y21 * y21,\n          l20_2 = x20 * x20 + y20 * y20,\n          l21 = Math.sqrt(l21_2),\n          l01 = Math.sqrt(l01_2),\n          l = r * Math.tan((pi - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n          t01 = l / l01,\n          t21 = l / l21;\n\n      // If the start tangent is not coincident with (x0,y0), line to.\n      if (Math.abs(t01 - 1) > epsilon) {\n        this._append`L${x1 + t01 * x01},${y1 + t01 * y01}`;\n      }\n\n      this._append`A${r},${r},0,0,${+(y01 * x20 > x01 * y20)},${this._x1 = x1 + t21 * x21},${this._y1 = y1 + t21 * y21}`;\n    }\n  }\n  arc(x, y, r, a0, a1, ccw) {\n    x = +x, y = +y, r = +r, ccw = !!ccw;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(`negative radius: ${r}`);\n\n    let dx = r * Math.cos(a0),\n        dy = r * Math.sin(a0),\n        x0 = x + dx,\n        y0 = y + dy,\n        cw = 1 ^ ccw,\n        da = ccw ? a0 - a1 : a1 - a0;\n\n    // Is this path empty? Move to (x0,y0).\n    if (this._x1 === null) {\n      this._append`M${x0},${y0}`;\n    }\n\n    // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n    else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) {\n      this._append`L${x0},${y0}`;\n    }\n\n    // Is this arc empty? We’re done.\n    if (!r) return;\n\n    // Does the angle go the wrong way? Flip the direction.\n    if (da < 0) da = da % tau + tau;\n\n    // Is this a complete circle? Draw two arcs to complete the circle.\n    if (da > tauEpsilon) {\n      this._append`A${r},${r},0,1,${cw},${x - dx},${y - dy}A${r},${r},0,1,${cw},${this._x1 = x0},${this._y1 = y0}`;\n    }\n\n    // Is this arc non-empty? Draw an arc!\n    else if (da > epsilon) {\n      this._append`A${r},${r},0,${+(da >= pi)},${cw},${this._x1 = x + r * Math.cos(a1)},${this._y1 = y + r * Math.sin(a1)}`;\n    }\n  }\n  rect(x, y, w, h) {\n    this._append`M${this._x0 = this._x1 = +x},${this._y0 = this._y1 = +y}h${w = +w}v${+h}h${-w}Z`;\n  }\n  toString() {\n    return this._;\n  }\n}\n\nexport function path() {\n  return new Path;\n}\n\n// Allow instanceof d3.path\npath.prototype = Path.prototype;\n\nexport function pathRound(digits = 3) {\n  return new Path(+digits);\n}\n","import {Path} from \"d3-path\";\n\nexport function withPath(shape) {\n  let digits = 3;\n\n  shape.digits = function(_) {\n    if (!arguments.length) return digits;\n    if (_ == null) {\n      digits = null;\n    } else {\n      const d = Math.floor(_);\n      if (!(d >= 0)) throw new RangeError(`invalid digits: ${_}`);\n      digits = d;\n    }\n    return shape;\n  };\n\n  return () => new Path(digits);\n}\n","export var slice = Array.prototype.slice;\n\nexport default function(x) {\n  return typeof x === \"object\" && \"length\" in x\n    ? x // Array, TypedArray, NodeList, array-like\n    : Array.from(x); // Map, Set, iterable, string, or anything else\n}\n","function Linear(context) {\n  this._context = context;\n}\n\nLinear.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // falls through\n      default: this._context.lineTo(x, y); break;\n    }\n  }\n};\n\nexport default function(context) {\n  return new Linear(context);\n}\n","export function x(p) {\n  return p[0];\n}\n\nexport function y(p) {\n  return p[1];\n}\n","import array from \"./array.js\";\nimport constant from \"./constant.js\";\nimport curveLinear from \"./curve/linear.js\";\nimport {withPath} from \"./path.js\";\nimport {x as pointX, y as pointY} from \"./point.js\";\n\nexport default function(x, y) {\n  var defined = constant(true),\n      context = null,\n      curve = curveLinear,\n      output = null,\n      path = withPath(line);\n\n  x = typeof x === \"function\" ? x : (x === undefined) ? pointX : constant(x);\n  y = typeof y === \"function\" ? y : (y === undefined) ? pointY : constant(y);\n\n  function line(data) {\n    var i,\n        n = (data = array(data)).length,\n        d,\n        defined0 = false,\n        buffer;\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) output.lineStart();\n        else output.lineEnd();\n      }\n      if (defined0) output.point(+x(d, i, data), +y(d, i, data));\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  line.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), line) : x;\n  };\n\n  line.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), line) : y;\n  };\n\n  line.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), line) : defined;\n  };\n\n  line.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;\n  };\n\n  line.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;\n  };\n\n  return line;\n}\n","import array from \"./array.js\";\nimport constant from \"./constant.js\";\nimport curveLinear from \"./curve/linear.js\";\nimport line from \"./line.js\";\nimport {withPath} from \"./path.js\";\nimport {x as pointX, y as pointY} from \"./point.js\";\n\nexport default function(x0, y0, y1) {\n  var x1 = null,\n      defined = constant(true),\n      context = null,\n      curve = curveLinear,\n      output = null,\n      path = withPath(area);\n\n  x0 = typeof x0 === \"function\" ? x0 : (x0 === undefined) ? pointX : constant(+x0);\n  y0 = typeof y0 === \"function\" ? y0 : (y0 === undefined) ? constant(0) : constant(+y0);\n  y1 = typeof y1 === \"function\" ? y1 : (y1 === undefined) ? pointY : constant(+y1);\n\n  function area(data) {\n    var i,\n        j,\n        k,\n        n = (data = array(data)).length,\n        d,\n        defined0 = false,\n        buffer,\n        x0z = new Array(n),\n        y0z = new Array(n);\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) {\n          j = i;\n          output.areaStart();\n          output.lineStart();\n        } else {\n          output.lineEnd();\n          output.lineStart();\n          for (k = i - 1; k >= j; --k) {\n            output.point(x0z[k], y0z[k]);\n          }\n          output.lineEnd();\n          output.areaEnd();\n        }\n      }\n      if (defined0) {\n        x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);\n        output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);\n      }\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  function arealine() {\n    return line().defined(defined).curve(curve).context(context);\n  }\n\n  area.x = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant(+_), x1 = null, area) : x0;\n  };\n\n  area.x0 = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant(+_), area) : x0;\n  };\n\n  area.x1 = function(_) {\n    return arguments.length ? (x1 = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), area) : x1;\n  };\n\n  area.y = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant(+_), y1 = null, area) : y0;\n  };\n\n  area.y0 = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant(+_), area) : y0;\n  };\n\n  area.y1 = function(_) {\n    return arguments.length ? (y1 = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), area) : y1;\n  };\n\n  area.lineX0 =\n  area.lineY0 = function() {\n    return arealine().x(x0).y(y0);\n  };\n\n  area.lineY1 = function() {\n    return arealine().x(x0).y(y1);\n  };\n\n  area.lineX1 = function() {\n    return arealine().x(x1).y(y0);\n  };\n\n  area.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), area) : defined;\n  };\n\n  area.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), area) : curve;\n  };\n\n  area.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area) : context;\n  };\n\n  return area;\n}\n","import type { Axis } from \"../axes/Axis\";\nimport type { AxisRenderer } from \"../axes/AxisRenderer\";\n\nimport { XYSeries, IXYSeriesPrivate, IXYSeriesSettings, IXYSeriesDataItem, IXYSeriesAxisRange } from \"./XYSeries\";\nimport { Graphics } from \"../../../core/render/Graphics\";\nimport { CurveFactory, line, area } from \"d3-shape\";\nimport { Template } from \"../../../core/util/Template\";\nimport { ListTemplate } from \"../../../core/util/List\";\nimport { color } from \"../../../core/util/Color\";\nimport { DataItem } from \"../../../core/render/Component\";\nimport { Rectangle } from \"../../../core/render/Rectangle\";\n\nimport * as $type from \"../../../core/util/Type\";\nimport * as $array from \"../../../core/util/Array\";\nimport * as $utils from \"../../../core/util/Utils\";\n\nexport interface IPointOptions {\n}\n\nexport interface ILineSeriesDataItem extends IXYSeriesDataItem {\n}\n\nexport interface ILineSeriesSettings extends IXYSeriesSettings {\n\n\t/**\n\t * If set to `true` the line will connect over \"gaps\" - categories or time\n\t * intervals with no data.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/line-series/#Gaps} for more info\n\t * @default true\n\t */\n\tconnect?: boolean;\n\n\t/**\n\t * If there are more than `autoGapCount` base time intervals (e.g. days) with\n\t * no data, the line will break and will display gap.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/line-series/#Auto_gaps_with_dates} for more info\n\t * @default 1.1\n\t */\n\tautoGapCount?: number;\n\n\t/**\n\t * @ignore\n\t */\n\tcurveFactory?: CurveFactory;\n\n\t/**\n\t * Allows simplifying the line with many points.\n\t *\n\t * If set, the series will skip points that are closer than X pixels to each\n\t * other.\n\t *\n\t * With many data points, this allows having smoother, less cluttered lines.\n\t *\n\t * @default 0\n\t * @since 5.2.7\n\t */\n\tminDistance?: number;\n\n\n}\n\nexport interface ILineSeriesPrivate extends IXYSeriesPrivate {\n}\n\n/**\n * Interface representing a [[LineSeries]] axis range.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/#Series_axis_ranges} for more info\n */\nexport interface ILineSeriesAxisRange extends IXYSeriesAxisRange {\n\n\t/**\n\t * A list template to use when applying line settings to the line segments covered\n\t * by an axis range.\n\t */\n\tstrokes?: ListTemplate<Graphics>;\n\n\t/**\n\t * A list template to use when applying fill settings to the fill segments covered\n\t * by an axis range.\n\t */\n\tfills?: ListTemplate<Graphics>;\n}\n\n/**\n * Used to plot line and/or area series.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/line-series/} for more info\n * @important\n */\nexport class LineSeries extends XYSeries {\n\n\tdeclare public _settings: ILineSeriesSettings;\n\tdeclare public _privateSettings: ILineSeriesPrivate;\n\tdeclare public _dataItemSettings: ILineSeriesDataItem;\n\tdeclare public _axisRangeType: ILineSeriesAxisRange;\n\n\tpublic static className: string = \"LineSeries\";\n\tpublic static classNames: Array<string> = XYSeries.classNames.concat([LineSeries.className]);\n\n\tprotected _endIndex!: number;\n\n\tprotected _strokeGenerator = line();\n\tprotected _fillGenerator = area();\n\n\tprotected _legendStroke?: Graphics;\n\tprotected _legendFill?: Graphics;\n\n\tprotected _afterNew() {\n\t\tthis._fillGenerator.y0(function(p: number[]) {\n\t\t\treturn p[3];\n\t\t});\n\n\t\tthis._fillGenerator.x0(function(p: number[]) {\n\t\t\treturn p[2];\n\t\t});\n\n\t\tthis._fillGenerator.y1(function(p: number[]) {\n\t\t\treturn p[1];\n\t\t});\n\n\t\tthis._fillGenerator.x1(function(p: number[]) {\n\t\t\treturn p[0];\n\t\t});\n\n\t\tsuper._afterNew();\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeStroke(strokes: ListTemplate<Graphics>): Graphics {\n\t\tconst stroke = this.mainContainer.children.push(strokes.make());\n\t\tstrokes.push(stroke);\n\t\treturn stroke;\n\t}\n\n\t/**\n\t * A [[TemplateList]] of all line segments in series.\n\t *\n\t * `strokes.template` can be used to set default settings for all line\n\t * segments, or to change on existing ones.\n\t *\n\t * @default new ListTemplate<Graphics>\n\t */\n\tpublic readonly strokes: ListTemplate<Graphics> = this.addDisposer(new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => Graphics._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.strokes.template.get(\"themeTags\", []), [\"line\", \"series\", \"stroke\"])\n\t\t}, [this.strokes.template]),\n\t));\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeFill(fills: ListTemplate<Graphics>): Graphics {\n\t\tconst fill = this.mainContainer.children.push(fills.make());\n\t\tfills.push(fill);\n\t\treturn fill;\n\t}\n\n\t/**\n\t * A [[TemplateList]] of all segment fills in series.\n\t *\n\t * `fills.template` can be used to set default settings for all segment\n\t * fills, or to change on existing ones.\n\t *\n\t * @default new ListTemplate<Graphics>\n\t */\n\tpublic readonly fills: ListTemplate<Graphics> = this.addDisposer(new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => Graphics._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.strokes.template.get(\"themeTags\", []), [\"line\", \"series\", \"fill\"])\n\t\t}, [this.fills.template]),\n\t));\n\n\t// custom set from data\n\tprotected _fillTemplate: Template<Graphics> | undefined;\n\tprotected _strokeTemplate: Template<Graphics> | undefined;\n\n\tprotected _previousPoint: Array<number> = [0, 0, 0, 0];\n\n\tprotected _dindex = 0;\n\tprotected _sindex = 0;\n\n\tpublic _updateChildren() {\n\n\t\tthis._strokeTemplate = undefined;\n\t\tthis._fillTemplate = undefined;\n\n\t\tlet xAxis = this.get(\"xAxis\");\n\t\tlet yAxis = this.get(\"yAxis\");\n\n\t\tif (this.isDirty(\"stroke\")) {\n\t\t\tconst stroke = this.get(\"stroke\");\n\t\t\tthis.strokes.template.set(\"stroke\", stroke);\n\t\t\tconst legendStroke = this._legendStroke;\n\t\t\tif (legendStroke) {\n\t\t\t\tlegendStroke.states.lookup(\"default\")!.set(\"stroke\", stroke);\n\t\t\t}\n\t\t}\n\t\tif (this.isDirty(\"fill\")) {\n\t\t\tconst fill = this.get(\"fill\");\n\t\t\tthis.fills.template.set(\"fill\", fill);\n\t\t\tconst legendFill = this._legendFill;\n\t\t\tif (legendFill) {\n\t\t\t\tlegendFill.states.lookup(\"default\")!.set(\"fill\", fill);\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"fillPattern\")) {\n\t\t\tconst fillPattern = this.get(\"fillPattern\");\n\t\t\tthis.fills.template.set(\"fillPattern\", fillPattern);\n\t\t\tconst legendFill = this._legendFill;\n\t\t\tif (legendFill) {\n\t\t\t\tlegendFill.states.lookup(\"default\")!.set(\"fillPattern\", fillPattern);\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"curveFactory\")) {\n\t\t\tconst curveFactory = this.get(\"curveFactory\")!;\n\t\t\tif (curveFactory) {\n\t\t\t\tthis._strokeGenerator.curve(curveFactory);\n\t\t\t\tthis._fillGenerator.curve(curveFactory);\n\t\t\t}\n\t\t}\n\n\t\tif (xAxis.inited && yAxis.inited) {\n\t\t\tif (this._axesDirty || this._valuesDirty || this._stackDirty || this.isDirty(\"vcx\") || this.isDirty(\"vcy\") || this._sizeDirty || this.isDirty(\"connect\") || this.isDirty(\"curveFactory\")) {\n\n\t\t\t\tthis.fills.each((fill) => {\n\t\t\t\t\tfill.setPrivate(\"visible\", false);\n\t\t\t\t})\n\n\t\t\t\tthis.strokes.each((fill) => {\n\t\t\t\t\tfill.setPrivate(\"visible\", false);\n\t\t\t\t})\n\n\t\t\t\tthis.axisRanges.each((axisRange) => {\n\t\t\t\t\tlet fills = axisRange.fills;\n\t\t\t\t\tif (fills) {\n\t\t\t\t\t\tfills.each((fill) => {\n\t\t\t\t\t\t\tfill.setPrivate(\"visible\", false);\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\n\t\t\t\t\tlet strokes = axisRange.strokes;\n\t\t\t\t\tif (strokes) {\n\t\t\t\t\t\tstrokes.each((stroke) => {\n\t\t\t\t\t\t\tstroke.setPrivate(\"visible\", false);\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\tlet startIndex = this.startIndex();\n\n\t\t\t\tlet strokeTemplateField = this.strokes.template.get(\"templateField\");\n\t\t\t\tlet fillTemplateField = this.fills.template.get(\"templateField\");\n\n\t\t\t\tlet strokeTemplateFound = true;\n\t\t\t\tlet fillTemplateFound = true;\n\n\t\t\t\tif (strokeTemplateField) {\n\t\t\t\t\tstrokeTemplateFound = false;\n\t\t\t\t}\n\t\t\t\tif (fillTemplateField) {\n\t\t\t\t\tfillTemplateFound = false;\n\t\t\t\t}\n\n\t\t\t\tfor (let i = startIndex - 1; i >= 0; i--) {\n\t\t\t\t\tlet dataItem = this.dataItems[i];\n\t\t\t\t\tlet hasValues = true;\n\t\t\t\t\tlet dataContext = dataItem.dataContext as any;\n\t\t\t\t\tif (strokeTemplateField) {\n\t\t\t\t\t\tif (dataContext[strokeTemplateField]) {\n\t\t\t\t\t\t\tstrokeTemplateFound = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (fillTemplateField) {\n\t\t\t\t\t\tif (dataContext[fillTemplateField]) {\n\t\t\t\t\t\t\tfillTemplateFound = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t$array.each(this._valueFields, (field) => {\n\t\t\t\t\t\tif (!$type.isNumber(dataItem.get(field as any))) {\n\t\t\t\t\t\t\thasValues = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t\tif (hasValues && strokeTemplateFound && fillTemplateFound) {\n\t\t\t\t\t\tstartIndex = i;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\n\t\t\t\tlet len = this.dataItems.length;\n\t\t\t\tlet endIndex = this.endIndex();\n\n\t\t\t\tif (endIndex < len) {\n\t\t\t\t\tendIndex++;\n\t\t\t\t\tfor (let i = endIndex; i < len; i++) {\n\t\t\t\t\t\tlet dataItem = this.dataItems[i];\n\t\t\t\t\t\tlet hasValues = true;\n\t\t\t\t\t\t$array.each(this._valueFields, (field) => {\n\t\t\t\t\t\t\tif (!$type.isNumber(dataItem.get(field as any))) {\n\t\t\t\t\t\t\t\thasValues = false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t\tif (hasValues) {\n\t\t\t\t\t\t\tendIndex = i + 1;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (startIndex > 0) {\n\t\t\t\t\tstartIndex--;\n\t\t\t\t}\n\n\t\t\t\tthis._endIndex = endIndex;\n\n\t\t\t\tthis._clearGraphics();\n\t\t\t\tthis._sindex = 0;\n\t\t\t\tthis._dindex = startIndex;\n\t\t\t\tif (this.dataItems.length == 1) {\n\t\t\t\t\tthis._startSegment(0);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t// this is done to avoid recursion with a lot of segments\n\t\t\t\t\twhile (this._dindex < endIndex - 1) {\n\t\t\t\t\t\tthis._startSegment(this._dindex);\n\t\t\t\t\t\tthis._sindex++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tthis._skipped = true;\n\t\t}\n\n\t\tsuper._updateChildren();\n\t}\n\n\tprotected _clearGraphics() {\n\t\tthis.strokes.clear();\n\t\tthis.fills.clear();\n\n\t\tthis.axisRanges.each((axisRange) => {\n\t\t\taxisRange.fills!.clear();\n\t\t\taxisRange.strokes!.clear();\n\t\t})\n\t}\n\n\tprotected _startSegment(dataItemIndex: number) {\n\t\tlet endIndex = this._endIndex;\n\t\tlet currentEndIndex = endIndex;\n\n\t\tconst autoGapCount = this.get(\"autoGapCount\")!;\n\t\tconst connect = this.get(\"connect\");\n\n\t\tconst fill = this.makeFill(this.fills);\n\n\t\tconst fillTemplate = this._fillTemplate;\n\t\tconst originalTemplate = this.fills.template;\n\t\tif (fillTemplate && fillTemplate != originalTemplate) {\n\t\t\tfill.template = fillTemplate;\n\t\t}\n\n\t\tfill.setPrivate(\"visible\", true);\n\n\t\tconst stroke = this.makeStroke(this.strokes);\n\n\t\tconst strokeTemplate = this._strokeTemplate;\n\t\tif (strokeTemplate && strokeTemplate != this.strokes.template) {\n\t\t\tstroke.template = strokeTemplate;\n\t\t}\n\n\t\tstroke.setPrivate(\"visible\", true);\n\n\t\tlet xAxis = this.get(\"xAxis\");\n\t\tlet yAxis = this.get(\"yAxis\");\n\t\tlet baseAxis = this.get(\"baseAxis\")!;\n\n\t\tlet vcx = this.get(\"vcx\", 1);\n\t\tlet vcy = this.get(\"vcy\", 1);\n\n\t\tlet xField = this._xField;\n\t\tlet yField = this._yField;\n\n\t\tlet xOpenField = this._xOpenField;\n\t\tlet yOpenField = this._yOpenField;\n\n\t\tconst xOpenFieldValue = this.get(\"openValueXField\");\n\t\tconst yOpenFieldValue = this.get(\"openValueYField\");\n\n\t\tif (!xOpenFieldValue) {\n\t\t\txOpenField = this._xField;\n\t\t}\n\n\t\tif (!yOpenFieldValue) {\n\t\t\tyOpenField = this._yField;\n\t\t}\n\n\t\tconst stacked = this.get(\"stacked\");\n\n\t\tconst basePosX = xAxis.basePosition();\n\t\tconst basePosY = yAxis.basePosition();\n\n\t\tlet baseField: string;\n\t\tif (baseAxis === yAxis) {\n\t\t\tbaseField = this._yField;\n\t\t}\n\t\telse {\n\t\t\tbaseField = this._xField;\n\t\t}\n\n\t\tconst segments: Array<Array<Array<number>>> = [];\n\t\tlet points: Array<Array<number>> = [];\n\t\tsegments.push(points);\n\n\t\tconst strokeTemplateField = this.strokes.template.get(\"templateField\");\n\t\tconst fillTemplateField = this.fills.template.get(\"templateField\");\n\n\t\tlet locationX = this.get(\"locationX\", 0.5);\n\t\tlet locationY = this.get(\"locationY\", 0.5);\n\n\t\tlet openLocationX = this.get(\"openLocationX\", locationX);\n\t\tlet openLocationY = this.get(\"openLocationY\", locationY);\n\n\t\tconst minDistance = this.get(\"minDistance\", 0);\n\n\t\tlet i: number;\n\n\t\tlet fillVisible = this.fills.template.get(\"visible\");\n\t\tif (this.axisRanges.length > 0) {\n\t\t\tfillVisible = true;\n\t\t}\n\n\t\tlet getOpen = false;\n\t\tif (stacked || xOpenFieldValue || yOpenFieldValue) {\n\t\t\tgetOpen = true;\n\t\t}\n\n\t\tconst o = {\n\t\t\tpoints, segments, stacked, getOpen, basePosX, basePosY, fillVisible, xField, yField, xOpenField, yOpenField, vcx, vcy, baseAxis, xAxis, yAxis, locationX, locationY, openLocationX, openLocationY, minDistance\n\t\t}\n\n\n\t\tlet rangeStrokeTemplate = this._strokeTemplate;\n\t\tlet rangeFillTemplate = this._fillTemplate;\n\n\t\tfor (i = dataItemIndex; i < currentEndIndex; i++) {\n\t\t\tthis._dindex = i;\n\t\t\tconst dataItem = this._dataItems[i];\n\n\t\t\tlet valueX = dataItem.get(xField as any);\n\t\t\tlet valueY = dataItem.get(yField as any);\n\n\t\t\tif (valueX == null || valueY == null) {\n\t\t\t\tif (!connect) {\n\t\t\t\t\tpoints = [];\n\t\t\t\t\tsegments.push(points);\n\t\t\t\t\to.points = points;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._getPoints(dataItem, o);\n\t\t\t}\n\n\t\t\tif (strokeTemplateField) {\n\t\t\t\tlet strokeTemplate = (dataItem.dataContext as any)[strokeTemplateField]\n\t\t\t\tif (strokeTemplate) {\n\t\t\t\t\tif (!(strokeTemplate instanceof Template)) {\n\t\t\t\t\t\tstrokeTemplate = Template.new(strokeTemplate);\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._strokeTemplate = strokeTemplate;\n\t\t\t\t\tif (i > dataItemIndex) {\n\t\t\t\t\t\tcurrentEndIndex = i;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\trangeStrokeTemplate = strokeTemplate;\n\t\t\t\t\t\tstroke.template = strokeTemplate;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (fillTemplateField) {\n\t\t\t\tlet fillTemplate = (dataItem.dataContext as any)[fillTemplateField]\n\t\t\t\tif (fillTemplate) {\n\t\t\t\t\tif (!(fillTemplate instanceof Template)) {\n\t\t\t\t\t\tfillTemplate = Template.new(fillTemplate);\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._fillTemplate = fillTemplate;\n\t\t\t\t\tif (i > dataItemIndex) {\n\t\t\t\t\t\tcurrentEndIndex = i;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\trangeFillTemplate = fillTemplate;\n\t\t\t\t\t\tfill.template = fillTemplate;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!connect) {\n\t\t\t\tlet nextItem = this.dataItems[i + 1];\n\t\t\t\tif (nextItem) {\n\t\t\t\t\tif (baseAxis.shouldGap(dataItem, nextItem, autoGapCount, baseField)) {\n\t\t\t\t\t\tpoints = [];\n\t\t\t\t\t\tsegments.push(points);\n\t\t\t\t\t\to.points = points;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfill.setRaw(\"userData\", [dataItemIndex, i]);\n\t\tstroke.setRaw(\"userData\", [dataItemIndex, i]);\n\n\t\tif (i === endIndex) {\n\t\t\tthis._endLine(points, segments[0][0]);\n\t\t}\n\n\t\tif (stroke) {\n\t\t\tthis._drawStroke(stroke, segments);\n\t\t}\n\n\t\tif (fill) {\n\t\t\tthis._drawFill(fill, segments);\n\t\t}\n\n\t\tthis.axisRanges.each((axisRange) => {\n\t\t\tconst container = axisRange.container;\n\t\t\tconst fills = axisRange.fills!;\n\t\t\tconst fill = this.makeFill(fills);\n\t\t\tif (container) {\n\t\t\t\tcontainer.children.push(fill);\n\t\t\t}\n\n\t\t\tfill.setPrivate(\"visible\", true);\n\t\t\tthis._drawFill(fill, segments);\n\n\t\t\tconst strokes = axisRange.strokes!;\n\t\t\tconst stroke = this.makeStroke(strokes);\n\t\t\tif (container) {\n\t\t\t\tcontainer.children.push(stroke);\n\t\t\t}\n\n\t\t\tif (rangeStrokeTemplate && rangeStrokeTemplate != this.strokes.template) {\n\t\t\t\tstroke.template = rangeStrokeTemplate;\n\t\t\t}\n\n\t\t\tif (rangeFillTemplate && rangeFillTemplate != this.fills.template) {\n\t\t\t\tfill.template = rangeFillTemplate;\n\t\t\t}\n\n\t\t\tstroke.setPrivate(\"visible\", true);\n\t\t\tthis._drawStroke(stroke, segments);\n\n\t\t\tfill.setRaw(\"userData\", [dataItemIndex, i]);\n\t\t\tstroke.setRaw(\"userData\", [dataItemIndex, i]);\n\t\t})\n\t}\n\n\tprotected _getPoints(dataItem: DataItem<this[\"_dataItemSettings\"]>, o: { points: Array<Array<number>>, segments: number[][][], stacked: boolean | undefined, getOpen: boolean, basePosX: number, basePosY: number, fillVisible: boolean | undefined, xField: string, yField: string, xOpenField: string, yOpenField: string, vcx: number, vcy: number, baseAxis: Axis<AxisRenderer>, xAxis: Axis<AxisRenderer>, yAxis: Axis<AxisRenderer>, locationX: number, locationY: number, openLocationX: number, openLocationY: number, minDistance: number }) {\n\t\tlet points = o.points;\n\n\t\tlet itemLocationX = dataItem.get(\"locationX\", o.locationX);\n\t\tlet itemLocationY = dataItem.get(\"locationY\", o.locationY);\n\n\t\tconst exactLocationX = this.get(\"exactLocationX\", false);\n\t\tconst exactLocationY = this.get(\"exactLocationY\", false);\n\n\t\tlet xPos = o.xAxis.getDataItemPositionX(dataItem, o.xField, itemLocationX, o.vcx, exactLocationX);\n\t\tlet yPos = o.yAxis.getDataItemPositionY(dataItem, o.yField, itemLocationY, o.vcy, exactLocationY);\n\n\t\tif (this._shouldInclude(xPos)) {\n\n\t\t\tconst iPoint = this.getPoint(xPos, yPos);\n\t\t\tconst point = [iPoint.x, iPoint.y];\n\n\t\t\tiPoint.x += this._x;\n\t\t\tiPoint.y += this._y;\n\n\t\t\tdataItem.set(\"point\", iPoint);\n\n\t\t\tif (o.fillVisible) {\n\t\t\t\tlet xPos0: number = xPos;\n\t\t\t\tlet yPos0: number = yPos;\n\n\t\t\t\tif (o.baseAxis === o.xAxis) {\n\t\t\t\t\tyPos0 = o.basePosY;\n\t\t\t\t}\n\t\t\t\telse if (o.baseAxis === o.yAxis) {\n\t\t\t\t\txPos0 = o.basePosX;\n\t\t\t\t}\n\n\t\t\t\tif (o.getOpen) {\n\t\t\t\t\tlet valueX = dataItem.get(o.xOpenField as any);\n\t\t\t\t\tlet valueY = dataItem.get(o.yOpenField as any);\n\n\t\t\t\t\tif (valueX != null && valueY != null) {\n\t\t\t\t\t\tlet itemLocationX = dataItem.get(\"openLocationX\", o.openLocationX);\n\t\t\t\t\t\tlet itemLocationY = dataItem.get(\"openLocationY\", o.openLocationY);\n\n\t\t\t\t\t\tif (o.stacked) {\n\t\t\t\t\t\t\tlet stackToItemX = dataItem.get(\"stackToItemX\")!;\n\t\t\t\t\t\t\tlet stackToItemY = dataItem.get(\"stackToItemY\")!;\n\n\t\t\t\t\t\t\tif (stackToItemX) {\n\t\t\t\t\t\t\t\txPos0 = o.xAxis.getDataItemPositionX(stackToItemX, o.xField, itemLocationX, (stackToItemX.component as XYSeries).get(\"vcx\"), exactLocationX);\n\t\t\t\t\t\t\t\tif ($type.isNaN(xPos0)) {\n\t\t\t\t\t\t\t\t\txPos0 = o.basePosX;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tif (o.yAxis === o.baseAxis) {\n\t\t\t\t\t\t\t\t\txPos0 = o.basePosX;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\txPos0 = o.xAxis.getDataItemPositionX(dataItem, o.xOpenField, itemLocationX, o.vcx, exactLocationX);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (stackToItemY) {\n\t\t\t\t\t\t\t\tyPos0 = o.yAxis.getDataItemPositionY(stackToItemY, o.yField, itemLocationY, (stackToItemY.component as XYSeries).get(\"vcy\"), exactLocationY);\n\t\t\t\t\t\t\t\tif ($type.isNaN(yPos0)) {\n\t\t\t\t\t\t\t\t\tyPos0 = o.basePosY;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tif (o.xAxis === o.baseAxis) {\n\t\t\t\t\t\t\t\t\tyPos0 = o.basePosY;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\tyPos0 = o.yAxis.getDataItemPositionY(dataItem, o.yOpenField, itemLocationY, o.vcy, exactLocationY);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\txPos0 = o.xAxis.getDataItemPositionX(dataItem, o.xOpenField, itemLocationX, o.vcx, exactLocationX);\n\t\t\t\t\t\t\tyPos0 = o.yAxis.getDataItemPositionY(dataItem, o.yOpenField, itemLocationY, o.vcy, exactLocationY);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tlet closeIPoint = this.getPoint(xPos0, yPos0);\n\n\t\t\t\tpoint[2] = closeIPoint.x;\n\t\t\t\tpoint[3] = closeIPoint.y;\n\t\t\t}\n\n\t\t\tif (o.minDistance > 0) {\n\t\t\t\tconst p0 = point[0];\n\t\t\t\tconst p1 = point[1];\n\t\t\t\tconst p2 = point[2];\n\t\t\t\tconst p3 = point[3];\n\n\t\t\t\tconst prev = this._previousPoint;\n\n\t\t\t\tconst pp0 = prev[0];\n\t\t\t\tconst pp1 = prev[1];\n\t\t\t\tconst pp2 = prev[2];\n\t\t\t\tconst pp3 = prev[3];\n\n\t\t\t\tif (Math.hypot(p0 - pp0, p1 - pp1) > o.minDistance || (p2 && p3 && Math.hypot(p2 - pp2, p3 - pp3) > o.minDistance)) {\n\t\t\t\t\tpoints.push(point);\n\t\t\t\t\tthis._previousPoint = point;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tpoints.push(point);\n\t\t\t}\n\t\t}\n\t}\n\n\n\tprotected _endLine(_points: Array<Array<number>>, _firstPoint: Array<number>) {\n\n\t}\n\n\tprotected _drawStroke(graphics: Graphics, segments: number[][][]) {\n\t\tif (graphics.get(\"visible\") && !graphics.get(\"forceHidden\")) {\n\t\t\tgraphics.set(\"draw\", (display) => {\n\t\t\t\t$array.each(segments, (segment) => {\n\t\t\t\t\tthis._strokeGenerator.context(display as any);\n\t\t\t\t\tthis._strokeGenerator(segment as [number, number][]);\n\t\t\t\t})\n\t\t\t})\n\t\t}\n\t}\n\n\tprotected _drawFill(graphics: Graphics, segments: number[][][]) {\n\t\tif (graphics.get(\"visible\") && !graphics.get(\"forceHidden\")) {\n\t\t\tgraphics.set(\"draw\", (display) => {\n\t\t\t\t$array.each(segments, (segment) => {\n\t\t\t\t\tthis._fillGenerator.context(display as any);\n\t\t\t\t\tthis._fillGenerator(segment as [number, number][]);\n\t\t\t\t})\n\t\t\t})\n\t\t}\n\t}\n\n\tprotected _processAxisRange(axisRange: this[\"_axisRangeType\"]) {\n\t\tsuper._processAxisRange(axisRange);\n\t\taxisRange.fills = new ListTemplate(\n\t\t\tTemplate.new({}),\n\t\t\t() => Graphics._new(this._root, {\n\t\t\t\tthemeTags: $utils.mergeTags(axisRange.fills!.template.get(\"themeTags\", []), [\"line\", \"series\", \"fill\"]),\n\t\t\t}, [this.fills.template, axisRange.fills!.template]),\n\t\t);\n\n\t\taxisRange.strokes = new ListTemplate(\n\t\t\tTemplate.new({}),\n\t\t\t() => Graphics._new(this._root, {\n\t\t\t\tthemeTags: $utils.mergeTags(axisRange.strokes!.template.get(\"themeTags\", []), [\"line\", \"series\", \"stroke\"]),\n\t\t\t}, [this.strokes.template, axisRange.strokes!.template])\n\t\t);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic createLegendMarker(_dataItem?: DataItem<this[\"_dataItemSettings\"]>) {\n\n\t\tconst legendDataItem = this.get(\"legendDataItem\");\n\n\t\tif (legendDataItem) {\n\t\t\tconst marker = legendDataItem.get(\"marker\");\n\n\t\t\tconst markerRectangle = legendDataItem.get(\"markerRectangle\");\n\t\t\tif (markerRectangle) {\n\t\t\t\tmarkerRectangle.setPrivate(\"visible\", false);\n\t\t\t}\n\n\t\t\tmarker.set(\"background\", Rectangle.new(marker._root, { fillOpacity: 0, fill: color(0x000000) }))\n\n\t\t\tconst legendStroke = marker.children.push(Graphics._new(marker._root, {\n\t\t\t\tthemeTags: [\"line\", \"series\", \"legend\", \"marker\", \"stroke\"], interactive: false\n\t\t\t}, [this.strokes.template]));\n\n\t\t\tthis._legendStroke = legendStroke;\n\n\t\t\tconst legendFill = marker.children.push(Graphics._new(marker._root, {\n\t\t\t\tthemeTags: [\"line\", \"series\", \"legend\", \"marker\", \"fill\"]\n\t\t\t}, [this.fills.template]));\n\n\t\t\tthis._legendFill = legendFill;\n\n\t\t\tconst disabledColor = this._root.interfaceColors.get(\"disabled\");\n\n\t\t\tlegendStroke.states.create(\"disabled\", { fill: disabledColor, stroke: disabledColor });\n\t\t\tlegendFill.states.create(\"disabled\", { fill: disabledColor, stroke: disabledColor });\n\n\t\t\tif (this.bullets.length > 0) {\n\t\t\t\tconst bulletFunction = this.bullets.getIndex(0);\n\t\t\t\tif (bulletFunction) {\n\t\t\t\t\tconst bullet = bulletFunction(marker._root, this, new DataItem(this, { legend: true }, {}));\n\t\t\t\t\tif (bullet) {\n\t\t\t\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\t\t\t\tif (sprite instanceof Graphics) {\n\t\t\t\t\t\t\tsprite.states.create(\"disabled\", { fill: disabledColor, stroke: disabledColor });\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (sprite) {\n\n\t\t\t\t\t\t\tsprite.setAll({\n\t\t\t\t\t\t\t\ttooltipText: undefined,\n\t\t\t\t\t\t\t\ttooltipHTML: undefined,\n\t\t\t\t\t\t\t\tfocusable: undefined,\n\t\t\t\t\t\t\t\tfocusableGroup: undefined,\n\t\t\t\t\t\t\t\tariaLabel: undefined\n\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\tmarker.children.push(sprite);\n\t\t\t\t\t\t\tsprite.setAll({ x: marker.width() / 2, y: marker.height() / 2 });\n\n\t\t\t\t\t\t\tmarker.events.on(\"boundschanged\", () => {\n\t\t\t\t\t\t\t\tsprite.setAll({ x: marker.width() / 2, y: marker.height() / 2 });\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n","import type { IPoint } from \"../../core/util/IPoint\";\nimport type { XYChart } from \"./XYChart\"\nimport type { XYSeries } from \"./series/XYSeries\";\nimport type { ISpritePointerEvent } from \"../../core/render/Sprite\";\nimport type { Axis } from \"./axes/Axis\";\nimport type { AxisRenderer } from \"./axes/AxisRenderer\";\nimport type { Tooltip } from \"../../core/render/Tooltip\";\n\nimport { Container, IContainerSettings, IContainerPrivate, IContainerEvents } from \"../../core/render/Container\";\nimport { p100 } from \"../../core/util/Percent\";\nimport { Graphics } from \"../../core/render/Graphics\";\nimport { Grid } from \"./axes/Grid\";\n//import { Animations } from \"../core/util/Animation\";\n\nimport * as $type from \"../../core/util/Type\";\nimport * as $utils from \"../../core/util/Utils\";\nimport * as $math from \"../../core/util/Math\";\nimport * as $array from \"../../core/util/Array\";\nimport * as $object from \"../../core/util/Object\";\nimport type { IPointerEvent } from \"../../core/render/backend/Renderer\";\n\nexport interface IXYCursorSettings extends IContainerSettings {\n\n\t/**\n\t * Cursor's X axis.\n\t *\n\t * If set, cursor will snap to that axis' cells.\n\t */\n\txAxis?: Axis<AxisRenderer>;\n\n\t/**\n\t * Cursor's Y axis.\n\t *\n\t * If set, cursor will snap to that axis' cells.\n\t */\n\tyAxis?: Axis<AxisRenderer>;\n\n\t/**\n\t * What should cursor do when dragged across plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/#Behavior} for more info\n\t * @default \"none\"\n\t */\n\tbehavior?: \"zoomX\" | \"zoomY\" | \"zoomXY\" | \"selectX\" | \"selectY\" | \"selectXY\" | \"none\";\n\n\t/**\n\t * Cursor's horizontal position relative to plot area.\n\t *\n\t * If this setting is set, cursor will not react to mouse/touch and will just\n\t * sit at specified position until `positionX` is reset to `undefined`.\n\t *\n\t * `0` - left, `1` - right.\n\t */\n\tpositionX?: number;\n\n\t/**\n\t * Cursor's vertical position relative to plot area.\n\t *\n\t * If this setting is set, cursor will not react to mouse/touch and will just\n\t * sit at specified position until `positionY` is reset to `undefined`.\n\t *\n\t * `0` - left, `1` - right.\n\t */\n\tpositionY?: number;\n\n\t/**\n\t * If set to `true`, cursor will not be hidden when mouse cursor moves out\n\t * of the plot area.\n\t *\n\t * @default false\n\t */\n\talwaysShow?: boolean;\n\n\t/**\n\t * A list of series to snap cursor to.\n\t *\n\t * If set, the cursor will always snap to the closest data item of listed\n\t * series.\n\t */\n\tsnapToSeries?: Array<XYSeries>;\n\n\t/**\n\t * Defines in which direction to look when searching for the nearest data\n\t * item to snap to.\n\t *\n\t * Possible values: `\"xy\"` (default), `\"x\"`, `\"y\"`, `\"x!\"`, `\"y!\"`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/#snapping-to-series} for more info\n\t * @since 5.0.6\n\t * @default \"xy\"\n\t */\n\tsnapToSeriesBy?: \"xy\" | \"x\" | \"y\" | \"x!\" | \"y!\";\n\n\t/**\n\t * An array of other [[XYCursor]] objects to sync this cursor with.\n\t *\n\t * If set will automatically move synced cursors to the same position within\n\t * their respective axes as the this cursor assumin same XY coordinates of\n\t * the pointer.\n\t *\n\t * NOTE: Syncing is performed using actual X/Y coordinates of the point of\n\t * mouse cursor's position or touch. It means that they will not sync by axis\n\t * positions, but rather by screen coordinates. For example vertical lines\n\t * will not sync across horizontally laid out charts, and vice versa.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/#syncing-cursors} for more info\n\t * @since 5.1.4\n\t */\n\tsyncWith?: Array<XYCursor>;\n\n\t/**\n\t * Minimum distance in pixels between down and up points.\n\t *\n\t * If a distance is less than the value of `moveThreshold`, the zoom or\n\t * selection won't happen.\n\t *\n\t * @since 5.2.20\n\t * @default 1\n\t */\n\tmoveThreshold?: number\n\n}\n\n\nexport interface IXYCursorPrivate extends IContainerPrivate {\n\n\t/**\n\t * Current X/Y coordinates of the cursor.\n\t */\n\tpoint?: IPoint;\n\n\t/**\n\t * Current horizontal position relative to the plot area (0-1).\n\t */\n\tpositionX?: number;\n\n\t/**\n\t * Current vertical position relative to the plot area (0-1).\n\t */\n\tpositionY?: number;\n\n\t/**\n\t * Horizontal cursor position on the moment when selection started.\n\t */\n\tdownPositionX?: number;\n\n\t/**\n\t * Vertical cursor position on the moment when selection started.\n\t */\n\tdownPositionY?: number;\n\n\t/**\n\t * Last global point to which cursor moved\n\t */\n\tlastPoint?: IPoint;\n}\n\nexport interface IXYCursorEvents extends IContainerEvents {\n\n\t/**\n\t * Kicks in when cursor selection ends.\n\t *\n\t * Only when `behavior` is set.\n\t */\n\tselectended: {\n\t\toriginalEvent: IPointerEvent,\n\t\ttarget: XYCursor\n\t};\n\n\t/**\n\t * Kicks in when cursor selection starts.\n\t *\n\t * Only when `behavior` is set.\n\t */\n\tselectstarted: {\n\t\toriginalEvent: IPointerEvent,\n\t\ttarget: XYCursor\n\t};\n\n\t/**\n\t * Kicks in when cursor's position over plot area changes.\n\t */\n\tcursormoved: {\n\t\tpoint: IPoint,\n\t\ttarget: XYCursor,\n\t\toriginalEvent?: IPointerEvent\n\t};\n\n\t/**\n\t * Kicks in when cursor's is hidden when user rolls-out of the plot area\n\t */\n\tcursorhidden: {\n\t\ttarget: XYCursor\n\t};\n\n\t/**\n\t * Invoked if pointer is pressed down on a plot area and released without\n\t * moving (only when behavior is `\"selectX\"`).\n\t *\n\t * @since 5.4.7\n\t */\n\tselectcancelled: {\n\t\toriginalEvent: IPointerEvent,\n\t\ttarget: XYCursor\n\t};\n\n}\n\n/**\n * Creates a chart cursor for an [[XYChart]].\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/} for more info\n * @important\n */\nexport class XYCursor extends Container {\n\tpublic static className: string = \"XYCursor\";\n\tpublic static classNames: Array<string> = Container.classNames.concat([XYCursor.className]);\n\n\tdeclare public _settings: IXYCursorSettings;\n\tdeclare public _privateSettings: IXYCursorPrivate;\n\tdeclare public _events: IXYCursorEvents;\n\n\tprotected _alwaysShow: boolean = false;\n\n\t/**\n\t * A [[Grid]] elment that used for horizontal line of the cursor crosshair.\n\t *\n\t * @default Grid.new()\n\t */\n\tpublic readonly lineX: Grid = this.children.push(Grid.new(this._root, {\n\t\tthemeTags: [\"x\"]\n\t}));\n\n\t/**\n\t * A [[Grid]] elment that used for horizontal line of the cursor crosshair.\n\t *\n\t * @default Grid.new()\n\t */\n\tpublic readonly lineY: Grid = this.children.push(Grid.new(this._root, {\n\t\tthemeTags: [\"y\"]\n\t}));\n\n\t/**\n\t * An element that represents current selection.\n\t *\n\t * @default Graphics.new()\n\t */\n\tpublic readonly selection: Graphics = this.children.push(Graphics.new(this._root, {\n\t\tthemeTags: [\"selection\", \"cursor\"], layer: 30\n\t}));\n\n\tprotected _movePoint: IPoint | undefined;\n\tprotected _lastPoint: IPoint = { x: 0, y: 0 };\n\tprotected _lastPoint2: IPoint = { x: 0, y: 0 };\n\n\tprotected _tooltipX: boolean = false;\n\tprotected _tooltipY: boolean = false;\n\n\t/**\n\t * A chart cursor is attached to.\n\t */\n\tpublic chart: XYChart | undefined;\n\n\tprotected _toX?: number;\n\tprotected _toY?: number;\n\n\tprotected _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"xy\", \"cursor\"]);\n\t\tsuper._afterNew();\n\t\tthis.setAll({ \"width\": p100, height: p100, isMeasured: true, position: \"absolute\" });\n\t\tthis.states.create(\"hidden\", { visible: true, opacity: 0 });\n\t\tthis._drawLines();\n\t\tthis.setPrivateRaw(\"visible\", false);\n\n\t\tthis._disposers.push(this.setTimeout(() => {\n\t\t\tthis.setPrivate(\"visible\", true)\n\t\t}, 500));\n\n\t\tthis._disposers.push(this.lineX.events.on(\"positionchanged\", () => {\n\t\t\tthis._handleXLine();\n\t\t}));\n\n\t\tthis._disposers.push(this.lineY.events.on(\"positionchanged\", () => {\n\t\t\tthis._handleYLine();\n\t\t}));\n\n\t\tthis._disposers.push(this.lineX.events.on(\"focus\", () => this._handleLineFocus()));\n\t\tthis._disposers.push(this.lineX.events.on(\"blur\", () => this._handleLineBlur()));\n\n\t\tthis._disposers.push(this.lineY.events.on(\"focus\", () => this._handleLineFocus()));\n\t\tthis._disposers.push(this.lineY.events.on(\"blur\", () => this._handleLineBlur()));\n\n\t\tif ($utils.supports(\"keyboardevents\")) {\n\t\t\tthis._disposers.push($utils.addEventListener(document, \"keydown\", (ev: KeyboardEvent) => {\n\t\t\t\tthis._handleLineMove($utils.getEventKey(ev), ev.ctrlKey);\n\t\t\t}));\n\t\t}\n\t}\n\n\tprotected _setUpTouch(): void {\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\tchart.plotContainer._display.cancelTouch = this.get(\"behavior\") != \"none\" ? true : false;\n\t\t}\n\t}\n\n\tprotected _handleXLine() {\n\t\tlet x = this.lineX.x();\n\t\tlet visible = true;\n\t\tif (x < 0 || x > this.width()) {\n\t\t\tvisible = false;\n\t\t}\n\t\tthis.lineX.setPrivate(\"visible\", visible);\n\t}\n\n\tprotected _handleYLine() {\n\t\tlet y = this.lineY.y();\n\t\tlet visible = true;\n\t\tif (y < 0 || y > this.height()) {\n\t\t\tvisible = false;\n\t\t}\n\t\tthis.lineY.setPrivate(\"visible\", visible);\n\t}\n\n\tprotected _handleLineMove(key: string, ctrlKey?: boolean) {\n\t\tlet dir: any = \"\";\n\n\t\tconst chart = this.chart;\n\n\t\tlet axis: Axis<AxisRenderer> | undefined;\n\t\tif (chart && chart.xAxes.length) {\n\t\t\tif (this._root.focused(this.lineX)) {\n\t\t\t\tdir = \"positionX\";\n\t\t\t\taxis = chart.xAxes.getIndex(0);\n\t\t\t}\n\t\t\telse if (this._root.focused(this.lineY)) {\n\t\t\t\taxis = chart.yAxes.getIndex(0);\n\t\t\t\tdir = \"positionY\";\n\t\t\t}\n\n\t\t\tlet m = 1;\n\t\t\tif (ctrlKey) {\n\t\t\t\tm = 5;\n\t\t\t}\n\n\t\t\tif (axis) {\n\t\t\t\tlet inversed = axis.get(\"renderer\").get(\"inversed\", false);\n\t\t\t\tlet step;\n\t\t\t\tif (key == \"ArrowRight\" || key == \"ArrowDown\") {\n\t\t\t\t\tstep = 1;\n\t\t\t\t}\n\t\t\t\telse if (key == \"ArrowLeft\" || key == \"ArrowUp\") {\n\t\t\t\t\tstep = -1;\n\t\t\t\t}\n\t\t\t\telse if (key == \"Tab\") {\n\t\t\t\t\tstep = 0;\n\t\t\t\t}\n\n\t\t\t\tif (step != null) {\n\t\t\t\t\tif (inversed) {\n\t\t\t\t\t\tstep *= -1;\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.set(dir, axis.nextPosition(step * m));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _handleLineFocus() {\n\t\tthis._alwaysShow = this.get(\"alwaysShow\", false);\n\t\tthis.setAll({\n\t\t\tpositionX: this.getPrivate(\"positionX\", 0),\n\t\t\tpositionY: this.getPrivate(\"positionY\", 0),\n\t\t\talwaysShow: true\n\t\t});\n\n\t\tthis._handleLineMove(\"Tab\");\n\t}\n\n\tprotected _handleLineBlur() {\n\t\tif (this.lineX.isFocus() || this.lineY.isFocus()) {\n\t\t\tthis.setAll({\n\t\t\t\tpositionX: undefined,\n\t\t\t\tpositionY: undefined,\n\t\t\t\talwaysShow: this._alwaysShow\n\t\t\t});\n\t\t}\n\t}\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tif (this.isDirty(\"xAxis\")) {\n\t\t\tthis._tooltipX = false;\n\t\t\tconst xAxis = this.get(\"xAxis\");\n\n\t\t\tif (xAxis) {\n\t\t\t\tconst tooltip = xAxis.get(\"tooltip\");\n\t\t\t\tif (tooltip) {\n\t\t\t\t\tthis._tooltipX = true;\n\t\t\t\t\tthis._disposers.push(\n\t\t\t\t\t\ttooltip.on(\"pointTo\", () => {\n\t\t\t\t\t\t\tthis._updateXLine(tooltip);\n\t\t\t\t\t\t})\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"yAxis\")) {\n\t\t\tthis._tooltipY = false;\n\t\t\tconst yAxis = this.get(\"yAxis\");\n\n\t\t\tif (yAxis) {\n\t\t\t\tconst tooltip = yAxis.get(\"tooltip\");\n\t\t\t\tif (tooltip) {\n\t\t\t\t\tthis._tooltipY = true;\n\t\t\t\t\tthis._disposers.push(\n\t\t\t\t\t\ttooltip.on(\"pointTo\", () => {\n\t\t\t\t\t\t\tthis._updateYLine(tooltip);\n\t\t\t\t\t\t})\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _handleSyncWith() {\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\tconst syncWith = this.get(\"syncWith\");\n\t\t\tconst otherCharts: Array<XYChart> = [];\n\t\t\tif (syncWith) {\n\t\t\t\t$array.each(syncWith, (cursor) => {\n\t\t\t\t\tconst chart = cursor.chart;\n\t\t\t\t\tif (chart) {\n\t\t\t\t\t\totherCharts.push(chart)\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}\n\t\t\tchart._otherCharts = otherCharts;\n\t\t}\n\t}\n\n\tpublic _updateChildren() {\n\t\tsuper._updateChildren();\n\t\tthis._handleSyncWith();\n\n\t\tif (this.isDirty(\"positionX\") || this.isDirty(\"positionY\")) {\n\t\t\tconst positionX = this.get(\"positionX\");\n\t\t\tconst positionY = this.get(\"positionY\");\n\n\t\t\tif (positionX == null && positionY == null) {\n\t\t\t\tthis.hide(0);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._movePoint = this.toGlobal(this._getPoint(this.get(\"positionX\", 0), this.get(\"positionY\", 0)));\n\t\t\t\tthis.handleMove();\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _updateXLine(tooltip: Tooltip) {\n\t\tlet x = $math.round(this._display.toLocal(tooltip.get(\"pointTo\", { x: 0, y: 0 })).x, 3);\n\t\tif (this._toX != x) {\n\t\t\tthis.lineX.animate({ key: \"x\", to: x, duration: tooltip.get(\"animationDuration\", 0), easing: tooltip.get(\"animationEasing\") });\n\t\t\tthis._toX = x;\n\t\t}\n\t}\n\n\tprotected _updateYLine(tooltip: Tooltip) {\n\t\tlet y = $math.round(this._display.toLocal(tooltip.get(\"pointTo\", { x: 0, y: 0 })).y, 3);\n\t\tif (this._toY != y) {\n\t\t\tthis.lineY.animate({ key: \"y\", to: y, duration: tooltip.get(\"animationDuration\", 0), easing: tooltip.get(\"animationEasing\") });\n\t\t\tthis._toY = y;\n\t\t}\n\t}\n\n\tprotected _drawLines() {\n\t\tthis.lineX.set(\"draw\", (display) => {\n\t\t\tdisplay.moveTo(0, 0);\n\t\t\tdisplay.lineTo(0, this.height());\n\t\t})\n\t\tthis.lineY.set(\"draw\", (display) => {\n\t\t\tdisplay.moveTo(0, 0);\n\t\t\tdisplay.lineTo(this.width(), 0);\n\t\t})\n\t}\n\n\tpublic updateCursor() {\n\t\tif (this.get(\"alwaysShow\")) {\n\t\t\tthis._movePoint = this.toGlobal(this._getPoint(this.get(\"positionX\", 0), this.get(\"positionY\", 0)));\n\t\t}\n\t\tthis.handleMove();\n\t}\n\n\tpublic _setChart(chart: XYChart): void {\n\t\tthis.chart = chart;\n\n\t\tthis._handleSyncWith();\n\n\t\tconst plotContainer = chart.plotContainer;\n\n\t\tthis.events.on(\"boundschanged\", () => {\n\t\t\tthis._disposers.push(this.setTimeout(() => {\n\t\t\t\tthis.updateCursor();\n\t\t\t}, 50))\n\t\t})\n\n\t\t//this._display.interactive = true;\n\t\tif ($utils.supports(\"touchevents\")) {\n\t\t\tthis._disposers.push(plotContainer.events.on(\"click\", (event) => {\n\t\t\t\tif ($utils.isTouchEvent(event.originalEvent)) {\n\t\t\t\t\tthis._handleMove(event);\n\t\t\t\t}\n\t\t\t}));\n\t\t\tthis._setUpTouch();\n\t\t}\n\n\t\tthis._disposers.push(plotContainer.events.on(\"pointerdown\", (event) => {\n\t\t\tthis._handleCursorDown(event);\n\t\t}));\n\n\t\tthis._disposers.push(plotContainer.events.on(\"globalpointerup\", (event) => {\n\t\t\tthis._handleCursorUp(event);\n\t\t\tif (!event.native && !this.isHidden()) {\n\t\t\t\tthis._handleMove(event);\n\t\t\t}\n\t\t}));\n\n\t\tthis._disposers.push(plotContainer.events.on(\"globalpointermove\", (event) => {\n\t\t\tif (!this.get(\"syncWith\")) {\n\t\t\t\tif ($object.keys(plotContainer._downPoints).length == 0 && !event.native && this.isHidden()) {\n\t\t\t\t\t// Ignore mouse movement if it originates on outside element and\n\t\t\t\t\t// we're not dragging.\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._handleMove(event);\n\n\t\t\tif (Math.hypot(this._lastPoint2.x - event.point.x, this._lastPoint2.y - event.point.y) > 1) {\n\t\t\t\tthis._handleLineBlur();\n\t\t\t\tthis._lastPoint2 = event.point;\n\t\t\t}\n\t\t}));\n\n\t\tconst parent = this.parent;\n\t\tif (parent) {\n\t\t\tparent.children.moveValue(this.selection);\n\t\t}\n\t}\n\n\tprotected _inPlot(point: IPoint): boolean {\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\treturn chart.inPlot(point);\n\t\t}\n\t\treturn false;\n\t}\n\n\tprotected _handleCursorDown(event: ISpritePointerEvent) {\n\t\tif ((event.originalEvent as any).button == 2) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst rootPoint = event.point;\n\t\tlet local = this._display.toLocal(rootPoint);\n\t\tconst chart = this.chart;\n\n\t\tthis.selection.set(\"draw\", () => { });\n\n\t\tif (chart && this._inPlot(local)) {\n\t\t\tthis._downPoint = local;\n\n\t\t\tif (this.get(\"behavior\") != \"none\") {\n\t\t\t\tthis.selection.show();\n\n\t\t\t\tconst type = \"selectstarted\";\n\t\t\t\tif (this.events.isEnabled(type)) {\n\t\t\t\t\tthis.events.dispatch(type, { type: type, target: this, originalEvent: event.originalEvent });\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet positionX = this._getPosition(local).x;\n\t\t\tlet positionY = this._getPosition(local).y;\n\n\t\t\tthis.setPrivate(\"downPositionX\", positionX);\n\t\t\tthis.setPrivate(\"downPositionY\", positionY);\n\t\t}\n\t}\n\n\tprotected _handleCursorUp(event: ISpritePointerEvent) {\n\t\t// TODO: handle multitouch\n\t\tif (this._downPoint) {\n\t\t\tconst behavior = this.get(\"behavior\", \"none\");\n\t\t\tif (behavior != \"none\") {\n\t\t\t\tif (behavior.charAt(0) === \"z\") {\n\t\t\t\t\tthis.selection.hide();\n\t\t\t\t}\n\n\t\t\t\tconst rootPoint = event.point;\n\t\t\t\tlet local = this._display.toLocal(rootPoint);\n\n\t\t\t\tconst downPoint = this._downPoint;\n\t\t\t\tconst moveThreshold = this.get(\"moveThreshold\", 1);\n\t\t\t\tif (local && downPoint) {\n\t\t\t\t\tlet dispatch = false;\n\t\t\t\t\tif (behavior === \"zoomX\" || behavior === \"zoomXY\" || behavior === \"selectX\" || behavior === \"selectXY\") {\n\t\t\t\t\t\tif (Math.abs(local.x - downPoint.x) > moveThreshold) {\n\t\t\t\t\t\t\tdispatch = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (behavior === \"zoomY\" || behavior === \"zoomXY\" || behavior === \"selectY\" || behavior === \"selectXY\") {\n\t\t\t\t\t\tif (Math.abs(local.y - downPoint.y) > moveThreshold) {\n\t\t\t\t\t\t\tdispatch = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (dispatch) {\n\t\t\t\t\t\tconst type = \"selectended\";\n\t\t\t\t\t\tif (this.events.isEnabled(type)) {\n\t\t\t\t\t\t\tthis.events.dispatch(type, { type: type, target: this, originalEvent: event.originalEvent });\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tconst type = \"selectcancelled\";\n\t\t\t\t\t\tif (this.events.isEnabled(type)) {\n\t\t\t\t\t\t\tthis.events.dispatch(type, { type: type, target: this, originalEvent: event.originalEvent });\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tthis._downPoint = undefined;\n\t}\n\n\tprotected _handleMove(event: ISpritePointerEvent) {\n\t\tif (this.getPrivate(\"visible\")) {\n\t\t\tconst chart = this.chart;\n\t\t\tif (chart && $object.keys(chart.plotContainer._downPoints).length > 1) {\n\t\t\t\tthis.set(\"forceHidden\", true)\n\t\t\t\treturn;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.set(\"forceHidden\", false)\n\t\t\t}\n\n\t\t\t// TODO: handle multitouch\n\t\t\tconst rootPoint = event.point;\n\t\t\tconst lastPoint = this._lastPoint;\n\n\t\t\tif (Math.round(lastPoint.x) === Math.round(rootPoint.x) && Math.round(lastPoint.y) === Math.round(rootPoint.y)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis._lastPoint = rootPoint;\n\t\t\tthis.setPrivate(\"lastPoint\", rootPoint);\n\n\t\t\tthis.handleMove({ x: rootPoint.x, y: rootPoint.y }, false, event.originalEvent);\n\t\t}\n\t}\n\n\tprotected _getPosition(point: IPoint): IPoint {\n\t\treturn { x: point.x / this.width(), y: point.y / this.height() };\n\t}\n\n\t/**\n\t * Moves the cursor to X/Y coordinates within chart container (`point`).\n\t *\n\t * If `skipEvent` parameter is set to `true`, the move will not invoke\n\t * the `\"cursormoved\"` event.\n\t *\n\t * @param  point      X/Y to move cursor to\n\t * @param  skipEvent  Do not fire \"cursormoved\" event\n\t */\n\tpublic handleMove(point?: IPoint, skipEvent?: boolean, originalEvent?: IPointerEvent) {\n\t\tif (!point) {\n\t\t\tpoint = this._movePoint;\n\t\t}\n\n\t\tconst alwaysShow = this.get(\"alwaysShow\");\n\n\t\tif (!point) {\n\t\t\tthis.hide(0);\n\t\t\treturn;\n\t\t}\n\n\t\tthis._movePoint = point;\n\t\tlet local = this._display.toLocal(point);\n\t\tlet chart = this.chart;\n\n\t\tif (chart && (this._inPlot(local) || this._downPoint)) {\n\t\t\tchart._movePoint = point;\n\n\t\t\tif (this.isHidden()) {\n\t\t\t\tthis.show();\n\n\t\t\t\tconst behavior = this.get(\"behavior\", \"\");\n\t\t\t\tif (behavior.charAt(0) == \"z\") {\n\t\t\t\t\tthis.selection.set(\"draw\", () => { });\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet x = local.x;\n\t\t\tlet y = local.y;\n\n\t\t\tlet xyPos = this._getPosition(local);\n\n\t\t\tthis.setPrivate(\"point\", local);\n\n\t\t\tlet snapToSeries = this.get(\"snapToSeries\");\n\n\t\t\tif (this._downPoint) {\n\t\t\t\tsnapToSeries = undefined;\n\t\t\t}\n\n\t\t\tlet userPositionX = this.get(\"positionX\");\n\t\t\tlet positionX = xyPos.x;\n\n\t\t\tif ($type.isNumber(userPositionX)) {\n\t\t\t\tpositionX = userPositionX;\n\t\t\t}\n\n\t\t\tlet userPositionY = this.get(\"positionY\");\n\t\t\tlet positionY = xyPos.y;\n\n\t\t\tif ($type.isNumber(userPositionY)) {\n\t\t\t\tpositionY = userPositionY;\n\t\t\t}\n\n\t\t\tthis.setPrivate(\"positionX\", positionX);\n\t\t\tthis.setPrivate(\"positionY\", positionY);\n\n\t\t\tconst xy = this._getPoint(positionX, positionY);\n\t\t\tx = xy.x;\n\t\t\ty = xy.y;\n\n\t\t\tchart.xAxes.each((axis) => {\n\t\t\t\taxis._handleCursorPosition(positionX, snapToSeries);\n\t\t\t\tif (alwaysShow) {\n\t\t\t\t\taxis.handleCursorShow();\n\t\t\t\t}\n\t\t\t})\n\t\t\tchart.yAxes.each((axis) => {\n\t\t\t\taxis._handleCursorPosition(positionY, snapToSeries);\n\t\t\t\tif (alwaysShow) {\n\t\t\t\t\taxis.handleCursorShow();\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tif (!skipEvent) {\n\t\t\t\tchart._handleCursorPosition();\n\n\t\t\t\tconst type = \"cursormoved\";\n\t\t\t\tif (this.events.isEnabled(type)) {\n\t\t\t\t\tthis.events.dispatch(type, { type: type, target: this, point: point, originalEvent: originalEvent });\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._updateLines(x, y);\n\n\t\t\tchart.arrangeTooltips();\n\t\t}\n\t\telse if (!this._downPoint) {\n\t\t\tif (!alwaysShow) {\n\t\t\t\tthis.hide(0);\n\n\t\t\t\tconst type = \"cursorhidden\";\n\t\t\t\tif (this.events.isEnabled(type)) {\n\t\t\t\t\tthis.events.dispatch(type, { type: type, target: this });\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (this._downPoint && this.get(\"behavior\") != \"none\") {\n\t\t\tthis._updateSelection(local)\n\t\t}\n\t}\n\n\tprotected _getPoint(positionX: number, positionY: number): IPoint {\n\t\treturn { x: this.width() * positionX, y: this.height() * positionY };\n\t}\n\n\n\tprotected _updateLines(x: number, y: number) {\n\t\tif (!this._tooltipX) {\n\t\t\tthis.lineX.set(\"x\", x);\n\t\t}\n\t\tif (!this._tooltipY) {\n\t\t\tthis.lineY.set(\"y\", y);\n\t\t}\n\n\t\tthis._drawLines();\n\t}\n\n\tprotected _updateSelection(point: IPoint) {\n\t\tconst selection = this.selection;\n\t\tconst behavior = this.get(\"behavior\");\n\t\tconst w = this.width();\n\t\tconst h = this.height();\n\n\t\tif (point.x < 0) {\n\t\t\tpoint.x = 0;\n\t\t}\n\n\t\tif (point.x > w) {\n\t\t\tpoint.x = w;\n\t\t}\n\n\t\tif (point.y < 0) {\n\t\t\tpoint.y = 0;\n\t\t}\n\n\t\tif (point.y > h) {\n\t\t\tpoint.y = h;\n\t\t}\n\n\t\tselection.set(\"draw\", (display) => {\n\t\t\tconst downPoint = this._downPoint;\n\t\t\tif (downPoint) {\n\t\t\t\tif (behavior === \"zoomXY\" || behavior === \"selectXY\") {\n\t\t\t\t\tdisplay.moveTo(downPoint.x, downPoint.y);\n\t\t\t\t\tdisplay.lineTo(downPoint.x, point.y);\n\t\t\t\t\tdisplay.lineTo(point.x, point.y);\n\t\t\t\t\tdisplay.lineTo(point.x, downPoint.y);\n\t\t\t\t\tdisplay.lineTo(downPoint.x, downPoint.y);\n\t\t\t\t}\n\t\t\t\telse if (behavior === \"zoomX\" || behavior === \"selectX\") {\n\t\t\t\t\tdisplay.moveTo(downPoint.x, 0);\n\t\t\t\t\tdisplay.lineTo(downPoint.x, h);\n\t\t\t\t\tdisplay.lineTo(point.x, h);\n\t\t\t\t\tdisplay.lineTo(point.x, 0);\n\t\t\t\t\tdisplay.lineTo(downPoint.x, 0);\n\t\t\t\t}\n\t\t\t\telse if (behavior === \"zoomY\" || behavior === \"selectY\") {\n\t\t\t\t\tdisplay.moveTo(0, downPoint.y);\n\t\t\t\t\tdisplay.lineTo(w, downPoint.y);\n\t\t\t\t\tdisplay.lineTo(w, point.y);\n\t\t\t\t\tdisplay.lineTo(0, point.y);\n\t\t\t\t\tdisplay.lineTo(0, downPoint.y);\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t}\n\n\tprotected _onHide() {\n\t\tif (this.isHidden()) {\n\t\t\tlet chart = this.chart;\n\t\t\tif (chart) {\n\n\t\t\t\tchart.xAxes.each((axis) => {\n\t\t\t\t\taxis.handleCursorHide();\n\t\t\t\t})\n\t\t\t\tchart.yAxes.each((axis) => {\n\t\t\t\t\taxis.handleCursorHide();\n\t\t\t\t})\n\t\t\t\tchart.series.each((series) => {\n\t\t\t\t\tseries.handleCursorHide();\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t\tsuper._onHide();\n\t}\n\n\tprotected _onShow() {\n\t\tif (!this.isHidden()) {\n\t\t\tlet chart = this.chart;\n\t\t\tif (chart) {\n\t\t\t\tchart.xAxes.each((axis) => {\n\t\t\t\t\taxis.handleCursorShow();\n\t\t\t\t})\n\t\t\t\tchart.yAxes.each((axis) => {\n\t\t\t\t\taxis.handleCursorShow();\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t\tsuper._onShow();\n\t}\n\n\tprotected _dispose() {\n\t\tsuper._dispose();\n\t\tthis.selection.dispose();\n\t}\n}\n"],"names":["x","pi","Math","PI","tau","epsilon","tauEpsilon","append","strings","this","_","i","n","length","arguments","Path","constructor","digits","_x0","_y0","_x1","_y1","_append","d","floor","Error","concat","k","round","appendRound","moveTo","y","_templateObject","_taggedTemplateLiteral","closePath","_templateObject2","lineTo","_templateObject3","quadraticCurveTo","x1","y1","_templateObject4","bezierCurveTo","x2","y2","_templateObject5","arcTo","r","x0","y0","x21","y21","x01","y01","l01_2","_templateObject6","abs","x20","y20","l21_2","l20_2","l21","sqrt","l01","l","tan","acos","t01","t21","_templateObject8","_templateObject9","_templateObject7","arc","a0","a1","ccw","dx","cos","dy","sin","cw","da","_templateObject0","_templateObject1","_templateObject10","_templateObject11","rect","w","h","_templateObject12","toString","withPath","shape","RangeError","prototype","Array","slice","from","Linear","context","_context","areaStart","_line","areaEnd","NaN","lineStart","_point","lineEnd","point","p","defined","constant","curve","curveLinear","output","path","line","data","buffer","array","defined0","undefined","pointX","pointY","area","j","x0z","y0z","arealine","lineX0","lineY0","lineY1","lineX1","LineSeries","XYSeries","Object","defineProperty","addDisposer","ListTemplate","Template","new","Graphics","_new","_root","themeTags","$utils","strokes","template","get","fills","_afterNew","_fillGenerator","super","makeStroke","stroke","mainContainer","children","push","make","makeFill","fill","_updateChildren","_strokeTemplate","_fillTemplate","xAxis","yAxis","isDirty","set","legendStroke","_legendStroke","states","lookup","legendFill","_legendFill","fillPattern","curveFactory","_strokeGenerator","inited","_axesDirty","_valuesDirty","_stackDirty","_sizeDirty","each","setPrivate","axisRanges","axisRange","startIndex","strokeTemplateField","fillTemplateField","strokeTemplateFound","fillTemplateFound","dataItem","dataItems","hasValues","dataContext","$array","_valueFields","field","$type","len","endIndex","_endIndex","_clearGraphics","_sindex","_dindex","_startSegment","_skipped","clear","dataItemIndex","currentEndIndex","autoGapCount","connect","fillTemplate","originalTemplate","strokeTemplate","baseAxis","vcx","vcy","xField","_xField","yField","_yField","xOpenField","_xOpenField","yOpenField","_yOpenField","xOpenFieldValue","yOpenFieldValue","stacked","basePosX","basePosition","basePosY","baseField","segments","points","locationX","locationY","openLocationX","openLocationY","minDistance","fillVisible","getOpen","o","rangeStrokeTemplate","rangeFillTemplate","_dataItems","valueX","valueY","_getPoints","nextItem","shouldGap","setRaw","_endLine","_drawStroke","_drawFill","container","itemLocationX","itemLocationY","exactLocationX","exactLocationY","xPos","getDataItemPositionX","yPos","getDataItemPositionY","_shouldInclude","iPoint","getPoint","_x","_y","xPos0","yPos0","stackToItemX","stackToItemY","component","closeIPoint","p0","p1","p2","p3","prev","_previousPoint","pp0","pp1","pp2","pp3","hypot","_points","_firstPoint","graphics","display","segment","_processAxisRange","createLegendMarker","_dataItem","legendDataItem","marker","markerRectangle","Rectangle","fillOpacity","color","interactive","disabledColor","interfaceColors","create","bullets","bulletFunction","getIndex","bullet","DataItem","legend","sprite","setAll","tooltipText","tooltipHTML","focusable","focusableGroup","ariaLabel","width","height","events","on","classNames","className","XYCursor","Container","Grid","layer","_settings","p100","isMeasured","position","visible","opacity","_drawLines","setPrivateRaw","_disposers","setTimeout","lineX","_handleXLine","lineY","_handleYLine","_handleLineFocus","_handleLineBlur","document","ev","_handleLineMove","ctrlKey","_setUpTouch","chart","plotContainer","_display","cancelTouch","key","dir","axis","xAxes","focused","yAxes","m","step","inversed","nextPosition","_alwaysShow","positionX","getPrivate","positionY","alwaysShow","isFocus","_prepareChildren","_tooltipX","tooltip","_updateXLine","_tooltipY","_updateYLine","_handleSyncWith","syncWith","otherCharts","cursor","_otherCharts","hide","_movePoint","toGlobal","_getPoint","handleMove","$math","toLocal","_toX","animate","to","duration","easing","_toY","updateCursor","_setChart","event","originalEvent","_handleMove","_handleCursorDown","_handleCursorUp","native","isHidden","$object","_downPoints","_lastPoint2","parent","moveValue","selection","_inPlot","inPlot","button","rootPoint","local","_downPoint","show","type","isEnabled","dispatch","target","_getPosition","behavior","charAt","downPoint","moveThreshold","lastPoint","_lastPoint","skipEvent","xyPos","snapToSeries","userPositionX","userPositionY","xy","_handleCursorPosition","handleCursorShow","_updateLines","arrangeTooltips","_updateSelection","_onHide","handleCursorHide","series","_onShow","_dispose","dispose"],"sourceRoot":""}