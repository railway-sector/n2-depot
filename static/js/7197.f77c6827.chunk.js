"use strict";(self.webpackChunkn2_depot=self.webpackChunkn2_depot||[]).push([[7197],{8350:(e,t,i)=>{i.d(t,{H:()=>f});var s=i(6326),n=i(46053),r=(i(81806),i(76460),i(47249),i(87990)),a=i(69098),o=i(42553),l=i(40565),u=i(6409),c=i(88205);let d=class extends((0,a.OU)(o.o)){constructor(e){super(e),this.name=void 0,this.method="none",this.value=void 0,this.bandIds=void 0,this.renderer=void 0}};(0,s.Cg)([(0,n.MZ)({type:String,json:{write:{isRequired:!0}}})],d.prototype,"name",void 0),(0,s.Cg)([(0,n.MZ)({type:["raster-function-template","variable","none"],json:{write:{isRequired:!0}}}),(0,u.e)({rasterFunctionTemplate:"raster-function-template",variable:"variable",none:"none"})],d.prototype,"method",void 0),(0,s.Cg)([(0,n.MZ)({type:String,json:{write:{isRequired:!0}}})],d.prototype,"value",void 0),(0,s.Cg)([(0,n.MZ)({type:[l.jz],json:{write:{isRequired:!0}}})],d.prototype,"bandIds",void 0),(0,s.Cg)([(0,n.MZ)({types:c.uy,json:{write:!0,origins:{"web-scene":{types:c.Gj,write:{overridePolicy:e=>({enabled:e&&"vector-field"!==e.type})}}}}})],d.prototype,"renderer",void 0),d=(0,s.Cg)([(0,r.$)("esri.renderers.support.RasterPresetRenderer")],d);const f=e=>{const t=e;let i=class extends t{constructor(){super(...arguments),this.activePresetRendererName=null,this.presetRenderers=null}};return(0,s.Cg)([(0,n.MZ)({type:String,json:{name:"layerDefinition.activePresetRendererName",write:{allowNull:!0}}})],i.prototype,"activePresetRendererName",void 0),(0,s.Cg)([(0,n.MZ)({type:[d],json:{name:"layerDefinition.presetRenderers",write:!0}})],i.prototype,"presetRenderers",void 0),i=(0,s.Cg)([(0,r.$)("esri.layers.mixins.RasterPresetRendererMixin")],i),i}},26855:(e,t,i)=>{i.d(t,{A:()=>u});var s,n=i(6326),r=i(46053),a=(i(81806),i(76460),i(47249),i(6409)),o=i(87990),l=i(75116);let u=s=class extends l.A{constructor(){super(...arguments),this.type="gcs-shift",this.tolerance=1e-8}forwardTransform(e){return"point"===(e=e.clone()).type?(e.x>180+this.tolerance&&(e.x-=360),e):(e.xmin>=180-this.tolerance?(e.xmax-=360,e.xmin-=360):e.xmax>180+this.tolerance&&(e.xmin=-180,e.xmax=180),e)}inverseTransform(e){return"point"===(e=e.clone()).type?(e.x<-this.tolerance&&(e.x+=360),e):(e.xmin<-this.tolerance&&(e.xmin+=360,e.xmax+=360),e)}clone(){return new s({tolerance:this.tolerance})}};(0,n.Cg)([(0,a.e)({GCSShiftXform:"gcs-shift"})],u.prototype,"type",void 0),(0,n.Cg)([(0,r.MZ)()],u.prototype,"tolerance",void 0),u=s=(0,n.Cg)([(0,o.$)("esri.layers.support.rasterTransforms.GCSShiftTransform")],u)},29754:(e,t,i)=>{i.d(t,{A:()=>m});var s,n=i(6326),r=i(46053),a=(i(81806),i(76460),i(47249),i(6409)),o=i(28379),l=i(87990),u=i(17707),c=i(76797),d=i(19247),f=i(75116);function h(e,t,i){const{x:s,y:n}=t;if(i<2)return{x:e[0]+s*e[2]+n*e[4],y:e[1]+s*e[3]+n*e[5]};if(2===i){const t=s*s,i=n*n,r=s*n;return{x:e[0]+s*e[2]+n*e[4]+t*e[6]+r*e[8]+i*e[10],y:e[1]+s*e[3]+n*e[5]+t*e[7]+r*e[9]+i*e[11]}}const r=s*s,a=n*n,o=s*n,l=r*s,u=r*n,c=s*a,d=n*a;return{x:e[0]+s*e[2]+n*e[4]+r*e[6]+o*e[8]+a*e[10]+l*e[12]+u*e[14]+c*e[16]+d*e[18],y:e[1]+s*e[3]+n*e[5]+r*e[7]+o*e[9]+a*e[11]+l*e[13]+u*e[15]+c*e[17]+d*e[19]}}function p(e,t,i){const{xmin:s,ymin:n,xmax:r,ymax:a,spatialReference:o}=t;let l=[];if(i<2)l.push({x:s,y:a}),l.push({x:r,y:a}),l.push({x:s,y:n}),l.push({x:r,y:n});else{let e=10;for(let t=0;t<e;t++)l.push({x:s,y:n+(a-n)*t/(e-1)}),l.push({x:r,y:n+(a-n)*t/(e-1)});e=8;for(let t=1;t<=e;t++)l.push({x:s+(r-s)*t/e,y:n}),l.push({x:s+(r-s)*t/e,y:a})}l=l.map(t=>h(e,t,i));const u=l.map(e=>e.x),d=l.map(e=>e.y);return new c.A({xmin:Math.min.apply(null,u),xmax:Math.max.apply(null,u),ymin:Math.min.apply(null,d),ymax:Math.max.apply(null,d),spatialReference:o})}let m=s=class extends f.A{constructor(){super(...arguments),this.polynomialOrder=1,this.type="polynomial"}readForwardCoefficients(e,t){const{coeffX:i,coeffY:s}=t;if(null===i||void 0===i||!i.length||null===s||void 0===s||!s.length||i.length!==s.length)return null;const n=[];for(let r=0;r<i.length;r++)n.push(i[r]),n.push(s[r]);return n}writeForwardCoefficients(e,t,i){const s=[],n=[];for(let r=0;r<(null===e||void 0===e?void 0:e.length);r++)r%2==0?s.push(e[r]):n.push(e[r]);t.coeffX=s,t.coeffY=n}get inverseCoefficients(){let e=this._get("inverseCoefficients");const t=this._get("forwardCoefficients");return!e&&t&&this.polynomialOrder<2&&(e=function(e){const[t,i,s,n,r,a]=e,o=s*a-r*n,l=r*n-s*a;return[(r*i-t*a)/o,(s*i-t*n)/l,a/o,n/l,-r/o,-s/l]}(t)),e}set inverseCoefficients(e){this._set("inverseCoefficients",e)}readInverseCoefficients(e,t){const{inverseCoeffX:i,inverseCoeffY:s}=t;if(null===i||void 0===i||!i.length||null===s||void 0===s||!s.length||i.length!==s.length)return null;const n=[];for(let r=0;r<i.length;r++)n.push(i[r]),n.push(s[r]);return n}writeInverseCoefficients(e,t,i){const s=[],n=[];for(let r=0;r<(null===e||void 0===e?void 0:e.length);r++)r%2==0?s.push(e[r]):n.push(e[r]);t.inverseCoeffX=s,t.inverseCoeffY=n}get affectsPixelSize(){return this.polynomialOrder>0}forwardTransform(e){if("point"===e.type){const t=h(this.forwardCoefficients,e,this.polynomialOrder);return new d.A({x:t.x,y:t.y,spatialReference:e.spatialReference})}return p(this.forwardCoefficients,e,this.polynomialOrder)}inverseTransform(e){if("point"===e.type){const t=h(this.inverseCoefficients,e,this.polynomialOrder);return new d.A({x:t.x,y:t.y,spatialReference:e.spatialReference})}return p(this.inverseCoefficients,e,this.polynomialOrder)}clone(){return new s({polynomialOrder:this.polynomialOrder,forwardCoefficients:this.forwardCoefficients?[...this.forwardCoefficients]:null,inverseCoefficients:this.inverseCoefficients?[...this.inverseCoefficients]:null})}};(0,n.Cg)([(0,r.MZ)({json:{write:!0}})],m.prototype,"polynomialOrder",void 0),(0,n.Cg)([(0,r.MZ)()],m.prototype,"forwardCoefficients",void 0),(0,n.Cg)([(0,o.w)("forwardCoefficients",["coeffX","coeffY"])],m.prototype,"readForwardCoefficients",null),(0,n.Cg)([(0,u.K)("forwardCoefficients")],m.prototype,"writeForwardCoefficients",null),(0,n.Cg)([(0,r.MZ)({json:{write:!0}})],m.prototype,"inverseCoefficients",null),(0,n.Cg)([(0,o.w)("inverseCoefficients",["inverseCoeffX","inverseCoeffY"])],m.prototype,"readInverseCoefficients",null),(0,n.Cg)([(0,u.K)("inverseCoefficients")],m.prototype,"writeInverseCoefficients",null),(0,n.Cg)([(0,r.MZ)()],m.prototype,"affectsPixelSize",null),(0,n.Cg)([(0,a.e)({PolynomialXform:"polynomial"})],m.prototype,"type",void 0),m=s=(0,n.Cg)([(0,l.$)("esri.layers.support.rasterTransforms.PolynomialTransform")],m)},34033:(e,t,i)=>{i.d(t,{H:()=>s,Z:()=>n});const s=Symbol("isImageryTileGraphicOrigin");function n(e){return!!e&&s in e}},47197:(e,t,i)=>{i.r(t),i.d(t,{default:()=>Ke});var s,n=i(89379),r=i(6326),a=i(16868),o=i(69098),l=i(50076),u=i(76460),c=i(77717),d=i(50346),f=i(68134),h=i(46053),p=i(40565),m=i(81806),g=(i(47249),i(87990)),y=i(57274),v=i(9465),x=i(34033);class w extends v.A{get[(s=x.H,y.Q)](){return this.layer}constructor(e){super(),this[s]=!0,this.type="imagery-tile",this.layer=e}get id(){return this.layer.id}}var I=i(25515),b=i(19502),C=i(65624),S=i(31362),A=i(24709),T=i(11270),R=i(94729),M=i(84008),O=i(8350),_=i(21617),F=i(5682),P=i(78817),k=i(95363),N=i(44135),D=i(51939),E=i(44038),B=i(17775),L=i(16175),J=i(85396),z=i(69539),V=i(76797),U=i(13312),H=i(38042),j=i(66486),Z=i(52297);function G(e){return["x","e","east","long","longitude"].includes(e.toLowerCase())}function q(e){return["y","n","west","lat","latitude"].includes(e.toLowerCase())}function W(e){const{axes:t}=e.domain,i=Object.keys(t),s=[],n=[];let r=-1,a=-1,o=[];for(let v=0;v<i.length;v++){const e=i[v];G(e)?r=v:q(e)&&(a=v);const l=t[e],u=[];if("values"in l){l.values.forEach(e=>u.push("string"==typeof e?new Date(e).getTime():e));const e=u[1]-u[0];s.push([u[0]-.5*e,u[u.length-1]+.5*e]),n.push(e)}else{const{start:e,stop:t,num:i}=l,r=(t-e)/(i-1);s.push([e-.5*r,t+.5*r]),n.push(r);for(let s=0;s<i;s++)u.push(e+r*s)}o.push({name:e,values:u,extent:[u[0],u[u.length-1]]})}r>-1&&-1===a?a=0===r?1:0:a>-1&&-1===r?r=0===a?1:0:-1===a&&-1===r&&(r=0,a=1),o=o.filter((e,t)=>!(t===r||t===a));const{referencing:l}=e.domain,u=l.find(e=>e.coordinates.includes(i[r])).system.id,c=null===u||void 0===u?void 0:u.slice(u.lastIndexOf("/")+1),d=null==c||"CRS84"===c?4326:Number(c),f=new U.A({wkid:d}),[h,p]=s[r],[m,g]=s[a],y=new V.A({xmin:h,xmax:p,ymin:m,ymax:g,spatialReference:f});return{width:Math.round(y.width/n[r]),height:Math.round(y.height/n[a]),extent:y,dimensions:o}}function X(e){var t;const i=(0,H.lR)();return i&&null!==(t=e[i])&&void 0!==t?t:Object.values(e)[0]}function Y(){return Math.round(255*Math.random())}function $(e){const t={},{parameters:i}=e;if(!i)return t;for(const[r,a]of Object.entries(i)){var s;const{type:e,description:i,unit:o,categoryEncoding:l,observedProperty:u}=a;if("Parameter"===e&&(t[r]={},i&&(t[r].description=X(i)),o&&(t[r].unit=o.label?X(o.label):null,t[r].symbol=null===(s=o.symbol)||void 0===s?void 0:s.value),l)){var n;const e=Object.entries(l).map((e,t)=>({OID:t,Value:Number(e[1]),ClassName:e[0].slice(e[0].lastIndexOf("/")+1),Count:1}));let i=!1;(null===u||void 0===u||null===(n=u.categories)||void 0===n?void 0:n.length)&&(u.categories.forEach(t=>{if(!t.id)return;const s=t.id.slice(t.id.lastIndexOf("/")+1),n=e.find(e=>e.ClassName===s);if(!n)return;const r=t.label?X(t.label):null;if(n.Label=r,t.preferredColor){const e=z.A.fromHex(t.preferredColor);e&&(i=!0,n.Red=e.r,n.Green=e.g,n.Blue=e.b)}}),i&&e.forEach(e=>{null==e.Red&&(e.Red=Y(),e.Green=Y(),e.Blue=Y())}));const s={objectIdFieldName:"",fields:[{name:"OID",type:"esriFieldTypeOID",alias:"OID",domain:null},{name:"Value",type:"esriFieldTypeInteger",alias:"Value",domain:null},{name:"Count",type:"esriFieldTypeDouble",alias:"Count",domain:null},{name:"ClassName",type:"esriFieldTypeString",alias:"ClassName",domain:null,length:50},{name:"Label",type:"esriFieldTypeString",alias:"Label",domain:null,length:50}],features:e.map(e=>({attributes:e}))};i&&s.fields.push({name:"Red",type:"esriFieldTypeInteger",alias:"Red",domain:null},{name:"Green",type:"esriFieldTypeInteger",alias:"Green",domain:null},{name:"Blue",type:"esriFieldTypeInteger",alias:"Blue",domain:null}),t[r].attributeTable=s}}return t}function K(e){let t=Number.MAX_VALUE,i=-Number.MAX_VALUE;for(let s=0;s<e.length;s++){const n=e[s];null!=n&&(n<t&&(t=n),n>i&&(i=n))}return(0,Z.X1)(t,i)}function Q(e,t,i){const s=e.map((e,i)=>({name:e,count:t[i]})).sort((e,t)=>e.name>t.name?-1:1),n=(r=1,e=>r*=e.count);var r;const a=[...s.slice(1),{name:"",count:1}].reverse().map(n).reverse();let o=0;for(let l=e.length-1;l>=0;l--)o+=a[s.findIndex(t=>{let{name:i}=t;return i===e[l]})]*(i%t[l]),i=Math.floor(i/t[l]);return o}var ee=i(15359),te=i(23032),ie=i(68347),se=i(52494),ne=i(86866);let re=class extends J.A{constructor(){super(...arguments),this.datasetFormat="MEMORY",this.source=null}get url(){return""}fetchRawTile(e,t,i){let s=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};if(!this._pixelBlockTiles){const{rasterInfo:n}=this,[r,a]=n.storageInfo.tileInfo.size,{sliceId:o}=s,{pixelBlocks:l}=this.source,u={pixelBlock:null==o?l[0]:l[o],useBilinear:"thematic"!==n.dataType,tileSize:{width:r,height:a},level:e,row:t,col:i},c=this.rasterJobHandler?this.rasterJobHandler.clipTile(u,s):(0,se.J$)(u);return Promise.resolve(c)}const n=this._pixelBlockTiles.get("".concat(e,"/").concat(t,"/").concat(i));return Promise.resolve(n)}async _open(e){var t,i;const s=this.source,{pixelBlocks:r,attributeTable:a,statistics:o,histograms:l,name:u,nativeExtent:c,transform:d,colormap:f}=s,h=r[0],{width:p,height:m,pixelType:g}=h,y=null!==(t=s.extent)&&void 0!==t?t:new V.A({xmin:-.5,ymin:.5,xmax:p-.5,ymax:m-.5,spatialReference:new U.A({wkid:3857})}),v=null!==(i=s.isPseudoSpatialReference)&&void 0!==i?i:!s.extent,x={x:y.width/p,y:y.height/m},w=(0,n.A)({},s.keyProperties);s.dataType&&(w.DataType=s.dataType),s.bandInfos&&(w.BandProperties=s.bandInfos.map(e=>e.toJSON())),a&&(w.DataType="Thematic");const I=new te.A({width:p,height:m,pixelType:g,extent:y,nativeExtent:c,attributeTable:a,colormap:f,transform:d,pixelSize:x,spatialReference:y.spatialReference,bandCount:h.pixels.length,keyProperties:w,multidimensionalInfo:s.multidimensionalInfo,statistics:o,isPseudoSpatialReference:v,histograms:l});this.ioConfig.skipMapInfo&&this.updateImageSpaceRasterInfo(I),this.createRemoteDatasetStorageInfo(I,512,512),this._set("rasterInfo",I),this.updateTileInfo(),I.multidimensionalInfo?await this._buildMDimStats(s.pixelBlocks,I.multidimensionalInfo):await this._buildInMemoryRaster(h,{width:512,height:512},e),I.multidimensionalInfo||(this.source=null),this.datasetName=u}async _buildInMemoryRaster(e,t,i){var s,n,r;const{rasterInfo:a}=this,o=null!==(s=a.storageInfo.maximumPyramidLevel)&&void 0!==s?s:0,u="thematic"!==a.dataType,c=this.rasterJobHandler?this.rasterJobHandler.split({pixelBlock:e,tileSize:t,maximumPyramidLevel:o,useBilinear:u},i):Promise.resolve((0,se.lD)(e,t,o,u)),f=null!=a.statistics,h=null!=a.histograms,p=this.ioConfig.skipStatistics||f?Promise.resolve({statistics:null,histograms:null}):this.rasterJobHandler?this.rasterJobHandler.estimateStatisticsHistograms({pixelBlock:e},i):Promise.resolve((0,ne.f4)(e)),m=await(0,d.Lx)([c,p]);if(!m[0].value&&m[1].value)throw new l.A("inmemory-raster:open","failed to build in memory raster");this._pixelBlockTiles=m[0].value,f||(a.statistics=null===(n=m[1].value)||void 0===n?void 0:n.statistics),h||(a.histograms=null===(r=m[1].value)||void 0===r?void 0:r.histograms)}async _buildMDimStats(e,t,i){for(let s=0;s<t.variables.length;s++){const n=t.variables[s];if(n.statistics)continue;const r=n.dimensions.map(e=>{var t,i,s;return new ee.A({variableName:n.name,dimensionName:e.name,values:[null!==(t=null===(i=e.values)||void 0===i?void 0:i[0])&&void 0!==t?t:null===(s=e.extent)||void 0===s?void 0:s[0]],isSlice:!0})}),a=(0,ie.NG)(r,t),o=null==a?null:e[a];if(null==o)continue;const l=this.rasterJobHandler?await this.rasterJobHandler.computeStatisticsHistograms({pixelBlock:o},i):(0,ne.eH)(o);n.statistics=l.statistics,n.histograms||(n.histograms=l.histograms)}}};(0,r.Cg)([(0,h.MZ)({type:String,json:{write:!0}})],re.prototype,"datasetFormat",void 0),(0,r.Cg)([(0,h.MZ)()],re.prototype,"source",void 0),(0,r.Cg)([(0,h.MZ)()],re.prototype,"url",null),re=(0,r.Cg)([(0,g.$)("esri.layers.support.rasterDatasets.InMemoryRaster")],re);const ae=re;var oe=i(77725);let le=class extends J.A{constructor(){super(...arguments),this.datasetFormat="CovJSON"}fetchRawTile(e,t,i){let s=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};return this._inMemoryRaster.fetchRawTile(e,t,i,s)}async _open(e){const{extent:t,pixelBlocks:i,multidimensionalInfo:s,attributeTable:n,bandNames:r}=await this._fetchData(e),{statistics:a,histograms:o}=(0,ne.eH)(i[0]),l=null===r||void 0===r?void 0:r.map(e=>({BandName:e})),u={DataType:n?"Thematic":s?"Scientific":"Generic",BandProperties:l},c=new ae({source:{extent:t,pixelBlocks:i,attributeTable:n?oe.A.fromJSON(n):null,multidimensionalInfo:s,statistics:a,histograms:o,keyProperties:u,isPseudoSpatialReference:!1}});await c.open(),this._inMemoryRaster=c;const d=this.source?"":this.url.slice(this.url.lastIndexOf("/")+1);this._set("datasetName",d.slice(0,d.indexOf("."))),this._set("rasterInfo",c.rasterInfo)}async _fetchData(e){var t,i,s,n;const r=null!==(t=this.source)&&void 0!==t?t:(await this.request(this.url,{signal:null===e||void 0===e?void 0:e.signal})).data,a="imagery-tile-layer:open-coverage-json";if("coverage"!==(null===(i=r.type)||void 0===i?void 0:i.toLowerCase())||"grid"!==(null===(s=r.domain)||void 0===s||null===(s=s.domainType)||void 0===s?void 0:s.toLowerCase()))throw new l.A(a,"Only coverage with Grid domain type is supported");if(!r.ranges)throw new l.A(a,"Missing ranges in the grid coverage data");if(null===(n=r.domain.referencing)||void 0===n||!n.length)throw new l.A(a,"Missing domain referencing in the grid coverage data");const o=Object.values(r.ranges);for(let u=0;u<o.length;u++){const{axisNames:e,shape:t,type:i,values:s}=o[u];if(!("ndarray"===i.toLowerCase()&&null!==s&&void 0!==s&&s.length&&null!==e&&void 0!==e&&e.length&&null!==t&&void 0!==t&&t.length))throw new l.A(a,"Only ranges with valid NdArray, axisNames, shape, and inline values are supported");if(!G(e[e.length-1])||!q(e[e.length-2]))throw new l.A(a,"Only row-major ordered pixel values are supported. X axis must be the last axis.")}return function(e){var t;const{width:i,height:s,extent:n,dimensions:r}=W(e),{ranges:a}=e,o=Object.keys(a).sort((e,t)=>e<t?-1:1),l=[];for(let h=0;h<o.length;h++){const e=o[h];(null===r||void 0===r?void 0:r.length)&&l.push({name:e,dimensions:r})}const u=$(e);l.forEach(e=>u[e.name]&&Object.assign(e,u[e.name]));const c=l.length?{variables:l}:void 0,d=[];for(let h=0;h<o.length;h++){const e=o[h],{values:t,dataType:n,axisNames:l,shape:u}=a[e],c=u.length>2?h*u.slice(0,-2).reduce((e,t)=>e*t):0,f=l.slice(0,-2),p=u.slice(0,-2),m="float"===n?"f32":K(t),g=i*s,y=t.length/g;for(let a=0;a<y;a++){const e=j.A.createEmptyBand(m,g),n=new Uint8Array(g).fill(255);let o=!1;const l=a*g;for(let i=0;i<g;i++){const s=t[l+i];null==s?(n[i]=0,o=!0):e[i]=s}if(0===h||null!==r&&void 0!==r&&r.length){const t=new j.A({width:i,height:s,mask:o?n:null,pixels:[e],pixelType:m});t.updateStatistics(),null!==r&&void 0!==r&&r.length?d[Q(f,p,a)+c]=t:d.push(t)}else{const t=d[a];t.pixels.push(e),o?t.mask&&(t.mask=j.A.combineBandMasks([t.mask,n])):t.mask=o?n:null}}}const f=null===(t=Object.values(u).find(e=>e.attributeTable))||void 0===t?void 0:t.attributeTable;return{extent:n,pixelBlocks:d,multidimensionalInfo:c,attributeTable:f,bandNames:c?void 0:o}}(r)}};(0,r.Cg)([(0,h.MZ)({type:String,json:{write:!0}})],le.prototype,"datasetFormat",void 0),(0,r.Cg)([(0,h.MZ)({constructOnly:!0})],le.prototype,"source",void 0),le=(0,r.Cg)([(0,g.$)("esri.layers.support.rasterDatasets.CovJSONRaster")],le);const ue=le;var ce=i(18690),de=i(80963),fe=i(86769),he=i(29754);function pe(e,t){if(!e||!t)return null;const i=[];for(let s=0;s<e.length;s++)i.push(e[s]),i.push(t[s]);return i}function me(e){if(!e)return null;let t=Number(e);if(!isNaN(t)&&0!==t)return new U.A({wkid:t});if(e=String(e).trim(),(0,de.jp)(e))return new U.A({wkt2:e});const i=e.toUpperCase();if(i.startsWith("COMPD_CS")){if(!i.includes("VERTCS")||!i.includes("GEOGCS")&&!i.startsWith("PROJCS"))return null;const s=i.indexOf("VERTCS"),n=i.indexOf("PROJCS"),r=n>-1?n:i.indexOf("GEOGCS");if(-1===r)return null;const a=e.slice(r,e.lastIndexOf("]",s)+1).trim(),o=e.slice(s,e.lastIndexOf("]")).trim();t=ge(a);const l=new U.A(t?{wkid:t}:{wkt:a}),u=ge(o);return u&&(l.vcsWkid=u),l}return i.startsWith("GEOGCS")||i.startsWith("PROJCS")?(t=ge(e),new U.A(0!==t?{wkid:t}:{wkt:e})):null}function ge(e){var t;const i=e.replaceAll("]","[").replaceAll('"',"").split("[").map(e=>e.trim()).filter(e=>""!==e),s=i[i.length-1].split(","),n=null===(t=s[0])||void 0===t?void 0:t.toLowerCase();if(("epsg"===n||"esri"===n)&&e.endsWith('"]]')){const e=Number(s[1]);if(!isNaN(e)&&0!==e)return e}return 0}function ye(e){var t;if("pamdataset"!==(null===e||void 0===e||null===(t=e.documentElement.tagName)||void 0===t?void 0:t.toLowerCase()))return{};const i={spatialReference:null,transform:null,metadata:{},rasterBands:[],statistics:null,histograms:null};e.documentElement.childNodes.forEach(e=>{if(1===e.nodeType)if((0,fe.g7)(e,"SRS")){if(!i.spatialReference){const t=(0,fe.mX)(e);i.spatialReference=me(t)}}else if((0,fe.g7)(e,"Metadata"))if("xml:ESRI"===e.getAttribute("domain")){const{spatialReference:t,transform:s}=function(e){var t;const i=(0,fe.V6)(e,"GeodataXform"),s=me((0,fe.v7)(i,"SpatialReference/WKID")||(0,fe.mX)(i,"SpatialReference/WKT"));if("typens:PolynomialXform"!==i.getAttribute("xsi:type"))return{spatialReference:s,transform:null};const n=null!==(t=(0,fe.v7)(i,"PolynomialOrder"))&&void 0!==t?t:1,r=(0,fe.Ui)(i,"CoeffX/Double"),a=(0,fe.Ui)(i,"CoeffY/Double"),o=(0,fe.Ui)(i,"InverseCoeffX/Double"),l=(0,fe.Ui)(i,"InverseCoeffY/Double"),u=pe(r,a),c=pe(o,l);return{spatialReference:s,transform:u&&c&&u.length&&c.length?new he.A({spatialReference:s,polynomialOrder:n,forwardCoefficients:u,inverseCoefficients:c}):null}}(e);i.transform=s,i.spatialReference||(i.spatialReference=t)}else(0,fe.IC)(e,"MDI").forEach(e=>i.metadata[e.getAttribute("key")]=(0,fe.mX)(e));else if((0,fe.g7)(e,"PAMRasterBand")){const t=function(e){var t;const i=(0,fe.v7)(e,"NoDataValue"),s=(0,fe.V6)(e,"Histograms/HistItem"),n=(0,fe.v7)(s,"HistMin"),r=(0,fe.v7)(s,"HistMax"),a=(0,fe.v7)(s,"BucketCount"),o=null===(t=(0,fe.mX)(s,"HistCounts"))||void 0===t?void 0:t.split("|").map(e=>Number(e));let l,u,c,d;(0,fe.IC)(e,"Metadata/MDI").forEach(e=>{var t;const i=Number(null!==(t=e.textContent)&&void 0!==t?t:e.nodeValue);switch(e.getAttribute("key").toUpperCase()){case"STATISTICS_MINIMUM":l=i;break;case"STATISTICS_MAXIMUM":u=i;break;case"STATISTICS_MEAN":c=i;break;case"STATISTICS_STDDEV":d=i}});const f=(0,fe.v7)(e,"Metadata/SourceBandIndex");return{noDataValue:i,histogram:null!==o&&void 0!==o&&o.length&&null!=n&&null!=r?{min:n,max:r,size:a||o.length,counts:o}:null,sourceBandIndex:f,statistics:null!=l&&null!=u?{min:l,max:u,avg:c,stddev:d}:null}}(e);null!=t.sourceBandIndex&&null==i.rasterBands[t.sourceBandIndex]?i.rasterBands[t.sourceBandIndex]=t:i.rasterBands.push(t)}});const s=i.rasterBands;if(s.length){const e=!!s[0].statistics;i.statistics=e?s.map(e=>e.statistics).filter(ce.Ru):null;const t=!!s[0].histogram;i.histograms=t?s.map(e=>e.histogram).filter(ce.Ru):null}return i}var ve=i(93982);let xe=class extends J.A{fetchRawTile(e,t,i){let s=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};return this._inMemoryRaster.fetchRawTile(e,t,i,s)}async _open(e){const t=await this._fetchData(e);let{spatialReference:i,statistics:s,histograms:n,transform:r}=await this._fetchAuxiliaryData(e);const a=!i;a&&(i=new U.A({wkid:3857})),(null===n||void 0===n?void 0:n.length)&&null==s&&(s=(0,ne.Pg)(n));const{width:o,height:l}=t;let u=new V.A({xmin:-.5,ymin:.5-l,xmax:o-.5,ymax:.5,spatialReference:i});const c=r?r.forwardTransform(u):u;let d=!0;if(r){const e=r.forwardCoefficients;d=e&&0===e[1]&&0===e[2],d&&(r=null,u=c)}const f=new ae({source:{extent:c,nativeExtent:u,transform:r,pixelBlocks:[t],statistics:s,histograms:n,keyProperties:{DateType:"Processed"},isPseudoSpatialReference:a},ioConfig:{sampling:"closest",skipStatistics:!0}});this.ioConfig.skipMapInfo&&(f.ioConfig.skipMapInfo=!0),await f.open(),f.source=null,this._set("rasterInfo",f.rasterInfo),this._inMemoryRaster=f}async _fetchData(e){const{data:t}=await this.request(this.url,{responseType:"array-buffer",signal:null===e||void 0===e?void 0:e.signal}),i=(0,ve.g)(t).toUpperCase();if("JPG"!==i&&"PNG"!==i&&"GIF"!==i&&"BMP"!==i)throw new l.A("image-aux-raster:open","the data is not a supported format");this._set("datasetFormat",i);const s=i.toLowerCase(),n="gif"===s||"bmp"===s||!(0,m.A)("ios"),r=await this.decodePixelBlock(t,{format:s,useCanvas:n,hasNoZlibMask:!0});if(null==r)throw new l.A("image-aux-raster:open","the data cannot be decoded");return r}async _fetchAuxiliaryData(e){var t;const i=null===e||void 0===e?void 0:e.signal,{skipExtensions:s=[],skipMapInfo:n}=this.ioConfig,r=n||s.includes("aux.xml")?null:this.request(this.url+".aux.xml",{responseType:"xml",signal:i}),a=this.datasetFormat,o="JPG"===a?"jgw":"PNG"===a?"pgw":"BMP"===a?"bpw":null,l=o&&s.includes(o)?null:this.request(this.url.slice(0,this.url.lastIndexOf("."))+"."+o,{responseType:"text",signal:i}),u=await(0,d.Lx)([r,l]);if(null!==i&&void 0!==i&&i.aborted)throw(0,d.NK)();const c=ye(null===(t=u[0].value)||void 0===t?void 0:t.data);if(!c.transform){const e=u[1].value?u[1].value.data.split("\n").slice(0,6).map(e=>Number(e)):null;c.transform=6===(null===e||void 0===e?void 0:e.length)?new he.A({forwardCoefficients:[e[4],e[5],e[0],-e[1],e[2],-e[3]]}):null}return c}};(0,r.Cg)([(0,h.MZ)({type:String,json:{write:!0}})],xe.prototype,"datasetFormat",void 0),xe=(0,r.Cg)([(0,g.$)("esri.layers.support.rasterDatasets.ImageAuxRaster")],xe);const we=xe;var Ie=i(30726),be=i(90534),Ce=i(19247),Se=i(49653),Ae=i(88235),Te=i(82356),Re=i(26855),Me=i(47594);let Oe=class extends J.A{constructor(){super(...arguments),this._levelOffset=0,this._tilemapCache=null,this._slices=null,this.datasetFormat="RasterTileServer",this.tileType=null}async fetchRawTile(e,t,i){var s;let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};const{storageInfo:a,extent:o}=this.rasterInfo,{transposeInfo:l}=a,u=null!=l&&!!r.transposedVariableName;if(this._slices&&!u&&null==r.sliceId)return null;const c=u?0:a.maximumPyramidLevel-e+this._levelOffset,d="".concat(this.url,"/tile/").concat(c,"/").concat(t,"/").concat(i),f=this._slices?u?{variable:r.transposedVariableName}:{sliceId:r.sliceId||0}:null;let h,p;if(a.isBsqTile){var m;const e=(null!==(m=r.bandIds)&&void 0!==m&&m.length?r.bandIds:[0,1,2]).map(e=>this.request(d,{query:(0,n.A)((0,n.A)({},f),{},{bandId:e}),responseType:"array-buffer",signal:r.signal})),t=await Promise.all(e),i=t.map(e=>e.data.byteLength).reduce((e,t)=>e+t),s=new Uint8Array(i);p=[];let a=0;for(const{data:n}of t)p.push(a),s.set(new Uint8Array(n),a),a+=n.byteLength;h=s.buffer}else h=(await this.request(d,{query:f,responseType:"array-buffer",signal:r.signal})).data;if(!h)return null;const g=u?l.tileSize:a.tileInfo.size,y=await this.decodePixelBlock(h,{width:g[0],height:g[1],planes:null===(s=p)||void 0===s?void 0:s.length,offsets:p,pixelType:null,isPoint:"Elevation"===this.tileType,returnInterleaved:u,noDataValue:this.rasterInfo.noDataValue});if(null==y)return null;const v=a.blockBoundary[e];if("jpg"!==a.compression||i>v.minCol&&i<v.maxCol&&t>v.minRow&&t<v.maxRow)return y;const{origin:x,blockWidth:w,blockHeight:I}=a,{x:b,y:C}=this.getPyramidPixelSize(e),S=Math.round((o.xmin-x.x)/b)%w,A=Math.round((o.xmax-x.x)/b)%w||w,T=Math.round((x.y-o.ymax)/C)%I,R=Math.round((x.y-o.ymin)/C)%I||I,M=i===v.minCol?S:0,O=t===v.minRow?T:0,_=i===v.maxCol?A:w,F=t===v.maxRow?R:I;return(0,se.z$)(y,{x:M,y:O},{width:_-M,height:F-O}),y}getSliceIndex(e){if(!this._slices||null==e||0===e.length)return null;const t=e;for(let i=0;i<this._slices.length;i++){const e=this._slices[i].multidimensionalDefinition;if(e.length===t.length&&!e.some(e=>{const i=t.find(t=>e.variableName===t.variableName&&t.dimensionName===e.dimensionName);return!i||(Array.isArray(e.values[0])?"".concat(e.values[0][0],"-").concat(e.values[0][1]):e.values[0])!==(Array.isArray(i.values[0])?"".concat(i.values[0][0],"-").concat(i.values[0][1]):i.values[0])}))return i}return null}async fetchVariableStatisticsHistograms(e,t){var i;const s=this.request(this.url+"/statistics",{query:{variable:e,f:"json"},signal:t}).then(e=>{var t;return null===(t=e.data)||void 0===t?void 0:t.statistics}),n=this.request(this.url+"/histograms",{query:{variable:e,f:"json"},signal:t}).then(e=>{var t;return null===(t=e.data)||void 0===t?void 0:t.histograms}),r=await Promise.all([s,n]);return r[0]&&r[0].forEach(e=>{e.avg=e.mean,e.stddev=e.standardDeviation}),null!==(i=r[1])&&void 0!==i&&null!==(i=i[0])&&void 0!==i&&null!==(i=i.counts)&&void 0!==i&&i.length||(r[1]=null),{statistics:r[0]||null,histograms:r[1]||null}}async computeBestPyramidLevelForLocation(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(!this._tilemapCache)return 0;let i=this.identifyPixelLocation(e,0,t.datumTransformation);if(null===i)return null;let s=0;const{maximumPyramidLevel:n}=this.rasterInfo.storageInfo;let r=n-s+this._levelOffset;const a=i.srcLocation;for(;r>=0;){try{if("available"===await this._tilemapCache.fetchAvailability(r,i.row,i.col,t))break}catch(o){}if(r--,s++,i=this.identifyPixelLocation(a,s,t.datumTransformation),null===i)return null}return-1===r||null==i?null:s}async _open(e){var t,i,s,r,a;const o=null===e||void 0===e?void 0:e.signal,u=this.sourceJSON?{data:this.sourceJSON}:await this.request(this.url,{query:{f:"json"},signal:o});u.ssl&&(this.url=this.url.replace(/^http:/i,"https:"));const c=u.data;if(this.sourceJSON=c,!c)throw new l.A("imageserverraster:open","cannot initialize tiled image service, missing service info");if(!c.tileInfo)throw new l.A("imageserverraster:open","use ImageryLayer to open non-tiled image services");this._fixScaleInServiceInfo();this.tileType=c.cacheType,null==this.tileType&&(["jpg","jpeg","png","png8","png24","png32","mixed"].includes(c.tileInfo.format.toLowerCase())?this.tileType="Map":"lerc"===c.tileInfo.format.toLowerCase()?this.tileType="Elevation":this.tileType="Raster"),this.datasetName=null!==(t=null===(i=c.name)||void 0===i?void 0:i.slice(c.name.indexOf("/")+1))&&void 0!==t?t:"";const d=await this._fetchRasterInfo({signal:o});if(null==d)throw new l.A("image-server-raster:open","cannot initialize image service");(0,Me.E9)(d,c);const f="Map"===this.tileType?function(e,t){if(!e)return null;const{minScale:i,maxScale:s,minLOD:r,maxLOD:a}=t;if(null!=r&&null!=a)return Ae.A.fromJSON((0,n.A)((0,n.A)({},e),{},{lods:e.lods.filter(e=>{let{level:t}=e;return null!=t&&t>=r&&t<=a})}));if(0!==i&&0!==s){const t=e=>Math.round(1e4*e)/1e4,r=i?t(i):1/0,a=s?t(s):-1/0;return Ae.A.fromJSON((0,n.A)((0,n.A)({},e),{},{lods:e.lods.filter(e=>{const i=t(e.scale);return i<=r&&i>=a})}))}return Ae.A.fromJSON(e)}(c.tileInfo,c):Ae.A.fromJSON(c.tileInfo);(0,Ie.Lw)(f);const[h,p]=this._computeMinMaxLOD(d,f),{extent:m,pixelSize:g}=d,y=.5/d.width*g.x,v=Math.max(g.x,g.y),{lods:x}=f;("Map"!==this.tileType&&0!==c.maxScale||Math.abs(g.x-g.y)>y||!x.some(e=>Math.abs(e.resolution-v)<y))&&(g.x=g.y=h.resolution,d.width=Math.ceil((m.xmax-m.xmin)/g.x-.1),d.height=Math.ceil((m.ymax-m.ymin)/g.y-.1));const w=h.level-p.level,[I,b]=f.size,C=[],S=[];x.forEach((e,t)=>{e.level>=p.level&&e.level<=h.level&&C.push({x:e.resolution,y:e.resolution}),t<x.length-1&&S.push(Math.round(10*e.resolution/x[t+1].resolution)/10)}),C.sort((e,t)=>e.x-t.x);const A=this.computeBlockBoundary(m,I,b,f.origin,C,w),T=C.length>1?C.slice(1):null;let R;c.transposeInfo&&(R={tileSize:[c.transposeInfo.rows,c.transposeInfo.cols],packetSize:null!==(s=null===(r=d.keyProperties)||void 0===r?void 0:r._yxs.PacketSize)&&void 0!==s?s:0});const M=S.length<=1||S.length>=3&&S.slice(0,-1).every(e=>e===S[0])?null!==(a=S[0])&&void 0!==a?a:2:Math.round(10/(p.resolution/h.resolution)**(-1/w))/10;if(d.storageInfo=new Se.A({blockWidth:f.size[0],blockHeight:f.size[1],pyramidBlockWidth:f.size[0],pyramidBlockHeight:f.size[1],pyramidResolutions:T,pyramidScalingFactor:M,compression:f.format,origin:f.origin,firstPyramidLevel:1,maximumPyramidLevel:w,tileInfo:f,isBsqTile:!!c.bsq,transposeInfo:R,blockBoundary:A}),function(e){const{extent:t,spatialReference:i}=e;t.xmin>-1&&t.xmax>181&&(null===i||void 0===i?void 0:i.wkid)&&i.isGeographic&&(e.nativeExtent=e.extent,e.transform=new Re.A,e.extent=e.transform.forwardTransform(t))}(d),this._set("rasterInfo",d),c.capabilities.toLowerCase().includes("tilemap")){const e={tileInfo:d.storageInfo.tileInfo,parsedUrl:(0,be.An)(this.url),url:this.url,tileServers:[]};this._tilemapCache=new Te.d({layer:e})}}async _fetchRasterInfo(e){const t=this.sourceJSON;if("Map"===this.tileType){const e=t.fullExtent||t.extent,i=Math.ceil((e.xmax-e.xmin)/t.pixelSizeX-.1),s=Math.ceil((e.ymax-e.ymin)/t.pixelSizeY-.1),n=U.A.fromJSON(t.spatialReference||e.spatialReference),r=new Ce.A({x:t.pixelSizeX,y:t.pixelSizeY,spatialReference:n});return new te.A({width:i,height:s,bandCount:3,extent:V.A.fromJSON(e),spatialReference:n,pixelSize:r,pixelType:"u8",statistics:null,keyProperties:{DataType:"processed"}})}const{signal:i}=e,s=(0,Me.Tw)(this.url,this.sourceJSON,{signal:i,query:this.ioConfig.customFetchParameters}),n=t.hasMultidimensions?this.request("".concat(this.url,"/slices"),{query:{f:"json"},signal:i}).then(e=>{var t;return null===(t=e.data)||void 0===t?void 0:t.slices}).catch(()=>null):null,r=await Promise.all([s,n]);return this._slices=r[1],r[0]}_fixScaleInServiceInfo(){const{sourceJSON:e}=this;e.minScale&&e.minScale<0&&(e.minScale=0),e.maxScale&&e.maxScale<0&&(e.maxScale=0)}_computeMinMaxLOD(e,t){var i,s;const{pixelSize:n}=e,r=.5/e.width*n.x,{lods:a}=t,o=t.lodAt(Math.max.apply(null,a.map(e=>e.level))),l=t.lodAt(Math.min.apply(null,a.map(e=>e.level))),{tileType:u}=this;if("Map"===u)return this._levelOffset=a[0].level,[o,l];var c;if("Raster"===u)return[null!==(c=a.find(e=>e.resolution===n.x))&&void 0!==c?c:o,l];const{minScale:d,maxScale:f}=this.sourceJSON;let h=o;f>0&&(h=a.find(e=>Math.abs(e.scale-f)<r),h||(h=null!==(i=a.filter(e=>e.scale>f).sort((e,t)=>e.scale>t.scale?1:-1)[0])&&void 0!==i?i:o));let p=l;return d>0&&(p=null!==(s=a.find(e=>Math.abs(e.scale-d)<r))&&void 0!==s?s:l,this._levelOffset=p.level-l.level),[h,p]}};(0,r.Cg)([(0,h.MZ)({type:String,json:{write:!0}})],Oe.prototype,"datasetFormat",void 0),(0,r.Cg)([(0,h.MZ)()],Oe.prototype,"tileType",void 0),Oe=(0,r.Cg)([(0,g.$)("esri.layers.support.rasterDatasets.ImageServerRaster")],Oe);const _e=Oe;var Fe=i(10798);const Pe=new Map;Pe.set("Int8","s8"),Pe.set("UInt8","u8"),Pe.set("Int16","s16"),Pe.set("UInt16","u16"),Pe.set("Int32","s32"),Pe.set("UInt32","u32"),Pe.set("Float32","f32"),Pe.set("Float64","f32"),Pe.set("Double64","f32");const ke=new Map;ke.set("none",{blobExtension:".til",isOneSegment:!0,decoderFormat:"bip"}),ke.set("lerc",{blobExtension:".lrc",isOneSegment:!1,decoderFormat:"lerc"}),ke.set("deflate",{blobExtension:".pzp",isOneSegment:!0,decoderFormat:"deflate"}),ke.set("jpeg",{blobExtension:".pjg",isOneSegment:!0,decoderFormat:"jpg"}),ke.set("qb3",{blobExtension:".pq3",isOneSegment:!0,decoderFormat:"qb3"});let Ne=class extends J.A{constructor(){super(...arguments),this._files=null,this._storageIndex=null,this.datasetFormat="MRF"}async fetchRawTile(e,t,i){let s=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};const{blockWidth:n,blockHeight:r,blockBoundary:a}=this.rasterInfo.storageInfo,o=a[e];if(!o||o.maxRow<t||o.maxCol<i||o.minRow>t||o.minCol>i)return null;const{bandCount:l,pixelType:u}=this.rasterInfo,{ranges:c,actualTileWidth:d,actualTileHeight:f}=this._getTileLocation(e,t,i);if(!c||0===c.length)return null;if(0===c[0].from&&0===c[0].to){const e=new Uint8Array(n*r);return new j.A({width:n,height:r,pixels:void 0,mask:e,validPixelCount:0})}const{bandIds:h}=this.ioConfig,p=this._getBandSegmentCount(),m=[];let g=0;for(g=0;g<p;g++)h&&!h.includes(g)||m.push(this.request(this._files.data,{range:{from:c[g].from,to:c[g].to},responseType:"array-buffer",signal:s.signal}));const y=await Promise.all(m),v=y.map(e=>e.data.byteLength).reduce((e,t)=>e+t),x=new Uint8Array(v),w=[];let I=0;for(g=0;g<p;g++)w.push(I),x.set(new Uint8Array(y[g].data),I),I+=y[g].data.byteLength;const b=ke.get(this.rasterInfo.storageInfo.compression).decoderFormat,C=await this.decodePixelBlock(x.buffer,{width:n,height:r,format:b,planes:(null===h||void 0===h?void 0:h.length)||l,offsets:w,pixelType:u}).catch(()=>null);if(null==C)return null;let{noDataValue:S}=this.rasterInfo;if(null!=S&&"lerc"!==b&&!C.mask&&(S=S[0],null!=S)){const e=C.width*C.height,t=new Uint8Array(e);if(Math.abs(S)>1e24)for(g=0;g<e;g++)Math.abs((C.pixels[0][g]-S)/S)>1e-6&&(t[g]=1);else for(g=0;g<e;g++)C.pixels[0][g]!==S&&(t[g]=1);C.mask=t}let A=0,T=0;if(d!==n||f!==r){let e=C.mask;if(e)for(g=0;g<r;g++)if(T=g*n,g<f)for(A=d;A<n;A++)e[T+A]=0;else for(A=0;A<n;A++)e[T+A]=0;else for(e=new Uint8Array(n*r),C.mask=e,g=0;g<f;g++)for(T=g*n,A=0;A<d;A++)e[T+A]=1}return C}async _open(e){this.datasetName=this.url.slice(this.url.lastIndexOf("/")+1);const t=e?e.signal:null,i=await this.request(this.url,{responseType:"xml",signal:t}),{rasterInfo:s,files:n}=this._parseHeader(i.data),{skipMapInfo:r,skipExtensions:a=[]}=this.ioConfig;if(!a.includes("aux.xml")&&!r){var o;const t=await this._fetchAuxiliaryData(e);null!=t&&(s.statistics=null!==(o=t.statistics)&&void 0!==o?o:s.statistics,s.histograms=t.histograms,t.histograms&&null==s.statistics&&(s.statistics=(0,ne.Pg)(t.histograms)))}r&&this.updateImageSpaceRasterInfo(s),this._set("rasterInfo",s),this._files=n;const l=await this.request(n.index,{responseType:"array-buffer",signal:t});this._storageIndex=function(e){if(e.byteLength%16>0)throw new Error("invalid array buffer must be multiples of 16");let t,i,s,n,r,a;if(Fe.Z){for(i=new Uint8Array(e),n=new ArrayBuffer(e.byteLength),s=new Uint8Array(n),r=0;r<e.byteLength/4;r++)for(a=0;a<4;a++)s[4*r+a]=i[4*r+3-a];t=new Uint32Array(n)}else t=new Uint32Array(e);return t}(l.data);const{blockWidth:u,blockHeight:c}=this.rasterInfo.storageInfo,d=this.rasterInfo.storageInfo.pyramidScalingFactor,{width:f,height:h}=this.rasterInfo,p=[],m=this._getBandSegmentCount();let g=0,y=-1;for(;g<this._storageIndex.length;){y++;const e=Math.ceil(f/u/d**y)-1,t=Math.ceil(h/c/d**y)-1;g+=(e+1)*(t+1)*m*4,p.push({maxRow:t,maxCol:e,minCol:0,minRow:0})}this.rasterInfo.storageInfo.blockBoundary=p,y>0&&(this.rasterInfo.storageInfo.firstPyramidLevel=1,this.rasterInfo.storageInfo.maximumPyramidLevel=y),this.updateTileInfo()}_getBandSegmentCount(){return ke.get(this.rasterInfo.storageInfo.compression).isOneSegment?1:this.rasterInfo.bandCount}_getTileLocation(e,t,i){const{blockWidth:s,blockHeight:n,pyramidScalingFactor:r}=this.rasterInfo.storageInfo,{width:a,height:o}=this.rasterInfo,l=this._getBandSegmentCount();let u,c,d,f=0,h=0;for(d=0;d<e;d++)h=r**d,u=Math.ceil(a/s/h),c=Math.ceil(o/n/h),f+=u*c;h=r**e,u=Math.ceil(a/s/h),c=Math.ceil(o/n/h),f+=t*u+i,f*=4*l;const p=this._storageIndex.subarray(f,f+4*l);let m=0,g=0;const y=[];for(let v=0;v<l;v++)m=p[4*v]*2**32+p[4*v+1],g=m+p[4*v+2]*2**32+p[4*v+3]-1,y.push({from:m,to:g});return{ranges:y,actualTileWidth:i<u-1?s:Math.ceil(a/h)-s*(u-1),actualTileHeight:t<c-1?n:Math.ceil(o/h)-n*(c-1)}}_parseHeader(e){const t=(0,fe.V6)(e,"MRF_META/Raster");if(!t)throw new l.A("mrf:open","not a valid MRF format");const i=(0,fe.V6)(t,"Size"),s=parseInt(i.getAttribute("x"),10),n=parseInt(i.getAttribute("y"),10),r=parseInt(i.getAttribute("c"),10),a=((0,fe.mX)(t,"Compression")||"none").toLowerCase();if(!ke.has(a))throw new l.A("mrf:open","currently does not support compression "+a);const o=(0,fe.mX)(t,"DataType")||"UInt8",u=Pe.get(o);if(null==u)throw new l.A("mrf:open","currently does not support pixel type "+o);const c=(0,fe.V6)(t,"PageSize"),d=parseInt(c.getAttribute("x"),10),f=parseInt(c.getAttribute("y"),10),h=(0,fe.V6)(t,"DataValues");let p,m;if(h&&(m=h.getAttribute("NoData"),null!=m&&(p=m.trim().split(" ").map(e=>parseFloat(e)))),(0,fe.V6)(e,"MRF_META/CachedSource"))throw new l.A("mrf:open","currently does not support MRF referencing other data files");const g=(0,fe.V6)(e,"MRF_META/GeoTags"),y=(0,fe.V6)(g,"BoundingBox");let v,x=!1;if(null!=y){var w;const e=parseFloat(y.getAttribute("minx")),t=parseFloat(y.getAttribute("miny")),i=parseFloat(y.getAttribute("maxx")),s=parseFloat(y.getAttribute("maxy")),n=(0,fe.mX)(g,"Projection")||"";let r=U.A.WGS84;if("LOCAL_CS[]"!==n)if(n.toLowerCase().startsWith("epsg:")){const e=Number(n.slice(5));isNaN(e)||0===e||(r=new U.A({wkid:e}))}else r=null!==(w=me(n))&&void 0!==w?w:U.A.WGS84;else x=!0,r=new U.A({wkid:3857});v=new V.A(e,t,i,s),v.spatialReference=r}else x=!0,v=new V.A({xmin:-.5,ymin:.5-n,xmax:s-.5,ymax:.5,spatialReference:new U.A({wkid:3857})});const I=(0,fe.V6)(e,"MRF_META/Rsets"),b=parseInt((null===I||void 0===I?void 0:I.getAttribute("scale"))||"2",10),C=v.spatialReference,S=new Se.A({origin:new Ce.A({x:v.xmin,y:v.ymax,spatialReference:C}),blockWidth:d,blockHeight:f,pyramidBlockWidth:d,pyramidBlockHeight:f,compression:a,pyramidScalingFactor:b}),A=new Ce.A({x:v.width/s,y:v.height/n,spatialReference:C}),T=new te.A({width:s,height:n,extent:v,isPseudoSpatialReference:x,spatialReference:C,bandCount:r,pixelType:u,pixelSize:A,noDataValue:p,storageInfo:S}),R=(0,fe.mX)(e,"datafile"),M=(0,fe.mX)(e,"IndexFile");return{rasterInfo:T,files:{mrf:this.url,index:M||this.url.replace(".mrf",".idx"),data:R||this.url.replace(".mrf",ke.get(a).blobExtension)}}}async _fetchAuxiliaryData(e){try{const{data:t}=await this.request(this.url+".aux.xml",{responseType:"xml",signal:null===e||void 0===e?void 0:e.signal});return ye(t)}catch(t){return null}}};(0,r.Cg)([(0,h.MZ)()],Ne.prototype,"_files",void 0),(0,r.Cg)([(0,h.MZ)()],Ne.prototype,"_storageIndex",void 0),(0,r.Cg)([(0,h.MZ)({type:String,json:{write:!0}})],Ne.prototype,"datasetFormat",void 0),Ne=(0,r.Cg)([(0,g.$)("esri.layers.support.rasterDatasets.MRFRaster")],Ne);const De=Ne;var Ee=i(50611);function Be(e){const t=e.fields,i=e.records,s=t.some(e=>"oid"===e.name.toLowerCase())?"OBJECTID":"OID",n=[{name:s,type:"esriFieldTypeOID",alias:"OID"}].concat(t.map(e=>({name:e.name,type:"esriFieldType"+e.typeName,alias:e.name}))),r=n.map(e=>e.name),a=[];let o=0,l=0;return i.forEach(e=>{const t={};for(t[s]=o++,l=1;l<r.length;l++)t[r[l]]=e[l-1];a.push({attributes:t})}),{displayFieldName:"",fields:n,features:a}}class Le{static get supportedVersions(){return[5]}static parse(e){const t=new DataView(e),i=3&t.getUint8(0);if(3!==i)return{header:{version:i},recordSet:null};const s=t.getUint32(4,!0),n=t.getUint16(8,!0),r=t.getUint16(10,!0),a={version:i,recordCount:s,headerByteCount:n,recordByteCount:r};let o=32;const l=[],u=[];let c;if(3===i){for(;13!==t.getUint8(o);)c=String.fromCharCode(t.getUint8(o+11)).trim(),l.push({name:(0,Ee.w)(new Uint8Array(e,o,11)),type:c,typeName:["String","Date","Double","Boolean","String","Integer"][["C","D","F","L","M","N"].indexOf(c)],length:t.getUint8(o+16)}),o+=32;if(o+=1,l.length>0)for(;u.length<s&&e.byteLength-o>r;){const i=[];32===t.getUint8(o)?(o+=1,l.forEach(t=>{if("C"===t.type)i.push((0,Ee.w)(new Uint8Array(e,o,t.length)).trim());else if("N"===t.type)i.push(parseInt(String.fromCharCode.apply(null,new Uint8Array(e,o,t.length)).trim(),10));else if("F"===t.type)i.push(parseFloat(String.fromCharCode.apply(null,new Uint8Array(e,o,t.length)).trim()));else if("D"===t.type){const s=String.fromCharCode.apply(null,new Uint8Array(e,o,t.length)).trim();i.push(new Date(parseInt(s.slice(0,4),10),parseInt(s.slice(4,6),10)-1,parseInt(s.slice(6,8),10)))}o+=t.length}),u.push(i)):o+=r}}return{header:a,fields:l,records:u,recordSet:Be({fields:l,records:u})}}}var Je=i(87018),ze=i(75374);const Ve=(e,t)=>{var i;return null===(i=e.get(t))||void 0===i?void 0:i.values},Ue=(e,t)=>{var i;return null===(i=e.get(t))||void 0===i||null===(i=i.values)||void 0===i?void 0:i[0]};let He=class extends J.A{constructor(){super(...arguments),this._files=null,this._headerInfo=null,this._bufferSize=1048576,this._chunkSize=10485760,this.datasetFormat="TIFF"}async fetchRawTile(e,t,i){var s;let n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};if(null===(s=this._headerInfo)||void 0===s||!s.isSupported||this.isBlockOutside(e,t,i))return null;const r=await this._fetchRawTiffTile(e,t,i,!1,n);if(null!=r&&this._headerInfo.hasMaskBand){const s=await this._fetchRawTiffTile(e,t,i,!0,n);null!=s&&s.pixels[0]instanceof Uint8Array&&(r.mask=s.pixels[0])}return r}async _open(e){var t,i;const s=e?e.signal:null,{data:r}=await this.request(this.url,{range:{from:0,to:this._bufferSize},responseType:"array-buffer",signal:s});if(!r)throw new l.A("tiffraster:open","failed to open url "+this.url);this.datasetName=this.url.slice(this.url.lastIndexOf("/")+1,this.url.lastIndexOf("."));const{littleEndian:a,firstIFDPos:o,isBigTiff:c}=(0,Je.uT)(r),d=[],f={fileChunk:r,posIFD:o,fileOffset:0};await this._readIFDs(d,f,a,c?8:4,s);const{imageInfo:h,rasterInfo:p}=function(e){var t,i;const s=(0,Je.uc)(e),{width:r,height:a,tileWidth:o,tileHeight:l,planes:u,pixelType:c,compression:d,firstPyramidLevel:f,maximumPyramidLevel:h,pyramidBlockWidth:p,pyramidBlockHeight:m,pyramidResolutions:g,tileBoundary:y,affine:v,metadata:x}=s,w=(null===(t=s.extent.spatialReference)||void 0===t?void 0:t.wkt)||(null===(i=s.extent.spatialReference)||void 0===i?void 0:i.wkid);let I=me(w),b=!!s.isPseudoGeographic;null==I&&(b=!0,I=new U.A({wkid:3857}));const C=new V.A((0,n.A)((0,n.A)({},s.extent),{},{spatialReference:I})),S=new Ce.A(C?{x:C.xmin,y:C.ymax,spatialReference:I}:{x:0,y:0}),A=new Se.A({blockWidth:o,blockHeight:l,pyramidBlockWidth:p,pyramidBlockHeight:m,compression:d,origin:S,firstPyramidLevel:f,maximumPyramidLevel:h,pyramidResolutions:g,blockBoundary:y}),T=new Ce.A({x:(C.xmax-C.xmin)/r,y:(C.ymax-C.ymin)/a,spatialReference:I}),R=x?{BandProperties:x.bandProperties,DataType:x.dataType}:{};let M=null;const O=Ue(e[0],"PHOTOMETRICINTERPRETATION"),_=Ve(e[0],"COLORMAP");if(O<=3&&(null===_||void 0===_?void 0:_.length)>3&&_.length%3==0){M=[];const e=_.length/3;for(let t=0;t<e;t++)M.push([t,_[t]>>>8,_[t+e]>>>8,_[t+2*e]>>>8])}const F=new te.A({width:r,height:a,bandCount:u,pixelType:c,pixelSize:T,storageInfo:A,spatialReference:I,isPseudoSpatialReference:b,keyProperties:R,extent:C,colormap:M,statistics:x?x.statistics:null});if(null!==v&&void 0!==v&&v.length&&(F.nativeExtent=new V.A({xmin:-.5,ymin:.5-a,xmax:r-.5,ymax:.5,spatialReference:I}),F.transform=new he.A({polynomialOrder:1,forwardCoefficients:[v[2]+v[0]/2,v[5]-v[3]/2,v[0],v[3],-v[1],-v[4]]}),F.extent=F.transform.forwardTransform(F.nativeExtent),F.pixelSize=new Ce.A({x:(C.xmax-C.xmin)/r,y:(C.ymax-C.ymin)/a,spatialReference:I}),A.origin.x=-.5,A.origin.y=.5),g){const{x:e,y:t}=F.pixelSize;g.forEach(i=>{i.x*=e,i.y*=t})}return{imageInfo:s,rasterInfo:F}}(d),m=(0,Je.zS)(d),g=(0,Je.r9)(d);if(this._headerInfo=(0,n.A)({littleEndian:a,isBigTiff:c,ifds:d,pyramidIFDs:m,maskIFDs:g},h),this._set("rasterInfo",p),!h.isSupported)throw new l.A("tiffraster:open","this tiff is not supported: "+h.message);if(!h.tileWidth)throw new l.A("tiffraster:open","none-tiled tiff is not optimized for access, convert to COG and retry.");p.isPseudoSpatialReference&&u.A.getLogger(this).warn("The spatial reference for this tiff is unsupported. Only EPSG spatial reference codes and Esri WKTs are supported.");const y=null===(t=d[0].get("PREDICTOR"))||void 0===t||null===(t=t.values)||void 0===t?void 0:t[0];if(3===(null===(i=d[0].get("SAMPLEFORMAT"))||void 0===i||null===(i=i.values)||void 0===i?void 0:i[0])&&2===y)throw new l.A("tiffraster:open","unsupported horizontal difference encoding. Predictor=3 is supported for floating point data");const{skipMapInfo:v,skipExtensions:x=[]}=this.ioConfig;if(!x.includes("aux.xml")&&!v){const t=await this._fetchAuxiliaryMetaData(e);null!=t&&function(e,t){var i;if(t.statistics=null!==(i=e.statistics)&&void 0!==i?i:t.statistics,t.histograms=e.histograms,e.histograms&&null==t.statistics&&(t.statistics=(0,ne.Pg)(e.histograms)),e.transform&&null==t.transform){t.transform=e.transform,t.nativeExtent=t.extent;const i=t.transform.forwardTransform(t.nativeExtent);t.pixelSize=new Ce.A({x:(i.xmax-i.xmin)/t.width,y:(i.ymax-i.ymin)/t.height,spatialReference:t.spatialReference}),t.extent=i}t.isPseudoSpatialReference&&e.spatialReference&&(t.spatialReference=e.spatialReference,t.extent.spatialReference=t.nativeExtent.spatialReference=t.storageInfo.origin.spatialReference=t.spatialReference)}(t,p)}x.includes("vat.dbf")||1!==p.bandCount||"u8"!==p.pixelType||v||(p.attributeTable=await this._fetchAuxiliaryTable(e),null!=p.attributeTable&&(p.keyProperties.DataType="thematic")),v&&this.updateImageSpaceRasterInfo(p),this.updateTileInfo()}async _validateOrFetchHeaderBuffer(e,t){let{fileChunk:i,fileOffset:s,posIFD:n}=e;return(n+8>=i.byteLength||n<0)&&(s=n+s,i=(await this.request(this.url,{range:{from:s,to:s+this._bufferSize},responseType:"array-buffer",signal:t})).data,n=0),{fileChunk:i,fileOffset:s,posIFD:n}}async _readIFDs(e,t,i){let s=arguments.length>3&&void 0!==arguments[3]?arguments[3]:4,n=arguments.length>4?arguments[4]:void 0;if(!t.posIFD)return null;t=await this._validateOrFetchHeaderBuffer(t,n);const r=await this._readIFD(t,i,ze.NB,s,n);if(null===r||void 0===r||!r.ifd)throw new l.A("tiffraster:open","cannot parse tiff header. failed to open url "+this.url);if(e.push(r.ifd),!r.nextIFD)return null;t.posIFD=r.nextIFD-t.fileOffset,await this._readIFDs(e,t,i,s,n)}async _readIFD(e,t){let i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:ze.NB,s=arguments.length>3&&void 0!==arguments[3]?arguments[3]:4,n=arguments.length>4?arguments[4]:void 0,{fileChunk:r,posIFD:a,fileOffset:o}=e;if(!e.fileChunk)return null;const l=(0,Je.JM)(r,t,a,o,i,s);if(l.success){var u,c;const e=[];if(null!==(u=l.ifd)&&void 0!==u&&u.forEach(t=>{t.values||e.push(t)}),e.length>0&&await this._fillOffsets(e,t,l.nextIFD,n),null!==(c=l.ifd)&&void 0!==c&&c.has("GEOKEYDIRECTORY")){const e=l.ifd.get("GEOKEYDIRECTORY"),i=null===e||void 0===e?void 0:e.values;if(i&&i.length>4){const s=i[0]+"."+i[1]+"."+i[2];a=e.valueOffset+6-o;const l=await this._validateOrFetchHeaderBuffer({fileChunk:r,posIFD:a,fileOffset:o},n),u=await this._readIFD(l,t,ze.YC,2,n);e.data=null===u||void 0===u?void 0:u.ifd,e.data&&e.data.set("GEOTIFFVersion",{id:0,type:2,valueCount:1,valueOffset:null,values:[s]})}}return l}return l.requiredBufferSize?(r=(await this.request(this.url,{range:{from:o,to:o+a+l.requiredBufferSize+8},responseType:"array-buffer",signal:n})).data,r.byteLength<a+l.requiredBufferSize?null:(e.fileChunk=r,e.fileOffset=o,this._readIFD(e,t,i,s,n))):null}async _fillOffsets(e,t,i,s){const n=e.filter(e=>null!=e.offlineOffsetSize);if(0===n.length)return;const r=n.map(e=>e.offlineOffsetSize),a=Math.min.apply(null,r.map(e=>e[0])),o=Math.max.apply(null,r.map(e=>e[0]+e[1]));let l=1===r.length||o-a<=this._bufferSize;if(!l&&r.length>1&&(r.sort((e,t)=>e[0]-t[0]),l=r.reduce((e,t)=>e===t[0]?t[0]+t[1]:0,r[0][0])===o),l){const e=await this._fetchOffsets(a,Math.max(o,a+this._bufferSize),s);return void n.forEach(i=>(0,Je.Cr)(e,t,i,a))}const u=n.map(async e=>{const i=e.offlineOffsetSize,n=await this._fetchOffsets(i[0],i[1]+i[0],s);(0,Je.Cr)(n,t,e,i[0])});await Promise.all(u)}async _fetchOffsets(e,t,i){const s=[],n=this._chunkSize,r=Math.ceil((t-e)/n);let a=e;for(let u=0;u<r;u++)s.push(this.request(this.url,{range:{from:a,to:u===r-1?t:a+n-1},responseType:"array-buffer",signal:i})),a+=n;const o=await Promise.all(s);if(1===r)return o[0].data;const l=new Uint8Array(t-e+1);for(let u=0;u<r;u++)l.set(new Uint8Array(o[u].data),u*n);return l.buffer}async _fetchRawTiffTile(e,t,i,s){let n=arguments.length>4&&void 0!==arguments[4]?arguments[4]:{};const r=this._getTileLocation(e,t,i,s);if(!r)return null;const{ranges:a,actualTileWidth:o,actualTileHeight:l,ifd:u}=r,c=a.map(e=>this.request(this.url,{range:e,responseType:"array-buffer",signal:n.signal})),d=await Promise.all(c),f=d.map(e=>e.data.byteLength).reduce((e,t)=>e+t),h=1===d.length?d[0].data:new ArrayBuffer(f),p=[0],m=[0];if(d.length>1){const e=new Uint8Array(h);for(let t=0,i=0;t<d.length;t++){const s=d[t].data;e.set(new Uint8Array(s),i),p[t]=i,i+=s.byteLength,m[t]=s.byteLength}}const{blockWidth:g,blockHeight:y}=this.getBlockWidthHeight(e),v=await this.decodePixelBlock(h,{format:"tiff",customOptions:{headerInfo:this._headerInfo,ifd:u,offsets:p,sizes:m},width:g,height:y,planes:null,pixelType:null});if(null==v)return null;let x,w,I;if(o!==g||l!==y){let e=v.mask;if(e)for(x=0;x<y;x++)if(I=x*g,x<l)for(w=o;w<g;w++)e[I+w]=0;else for(w=0;w<g;w++)e[I+w]=0;else for(e=new Uint8Array(g*y),v.mask=e,x=0;x<l;x++)for(I=x*g,w=0;w<o;w++)e[I+w]=1}return v}_getTileLocation(e,t,i){let s=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const{firstPyramidLevel:n,blockBoundary:r}=this.rasterInfo.storageInfo,a=0===e?0:e-(n-1),{_headerInfo:o}=this;if(!o)return null;const l=s?o.maskIFDs[a]:0===a?null===o||void 0===o?void 0:o.ifds[0]:null===o||void 0===o?void 0:o.pyramidIFDs[a-1];if(!l)return null;const u=(0,Je.XO)(l,o),c=Ve(l,"TILEOFFSETS");if(void 0===c)return null;const d=Ve(l,"TILEBYTECOUNTS"),{minRow:f,minCol:h,maxRow:p,maxCol:m}=r[a];if(t>p||i>m||t<f||i<h)return null;const g=Ue(l,"IMAGEWIDTH"),y=Ue(l,"IMAGELENGTH"),v=Ue(l,"TILEWIDTH"),x=Ue(l,"TILELENGTH"),w=[];if(u){const{bandCount:e}=this.rasterInfo;for(let s=0;s<e;s++){const e=s*(p+1)*(m+1)+t*(m+1)+i;w[s]={from:c[e],to:c[e]+d[e]-1}}}else{const e=t*(m+1)+i;w.push({from:c[e],to:c[e]+d[e]-1})}for(let I=0;I<w.length;I++)if(null==w[I].from||!w[I].to||w[I].to<0)return null;return{ranges:w,ifd:l,actualTileWidth:i===m&&g%v||v,actualTileHeight:t===p&&y%x||x}}async _fetchAuxiliaryMetaData(e){try{const{data:t}=await this.request(this.url+".aux.xml",{responseType:"xml",signal:null===e||void 0===e?void 0:e.signal});return ye(t)}catch(t){return null}}async _fetchAuxiliaryTable(e){try{const{data:t}=await this.request(this.url+".vat.dbf",{responseType:"array-buffer",signal:null===e||void 0===e?void 0:e.signal}),i=Le.parse(t);return null!==i&&void 0!==i&&i.recordSet?oe.A.fromJSON(i.recordSet):null}catch(t){return null}}};(0,r.Cg)([(0,h.MZ)()],He.prototype,"_files",void 0),(0,r.Cg)([(0,h.MZ)()],He.prototype,"_headerInfo",void 0),(0,r.Cg)([(0,h.MZ)()],He.prototype,"_bufferSize",void 0),(0,r.Cg)([(0,h.MZ)()],He.prototype,"_chunkSize",void 0),(0,r.Cg)([(0,h.MZ)({type:String,json:{write:!0}})],He.prototype,"datasetFormat",void 0),He=(0,r.Cg)([(0,g.$)("esri.layers.support.rasterDatasets.TIFFRaster")],He);const je=He,Ze=new Map;Ze.set("MRF",{desc:"Meta Raster Format",constructor:De}),Ze.set("TIFF",{desc:"GeoTIFF",constructor:je}),Ze.set("RasterTileServer",{desc:"Raster Tile Server",constructor:_e}),Ze.set("JPG",{desc:"JPG Raster Format",constructor:we}),Ze.set("PNG",{desc:"PNG Raster Format",constructor:we}),Ze.set("GIF",{desc:"GIF Raster Format",constructor:we}),Ze.set("BMP",{desc:"BMP Raster Format",constructor:we}),Ze.set("CovJSON",{desc:"COVJSON Raster Format",constructor:ue}),Ze.set("MEMORY",{desc:"In Memory Raster Format",constructor:ae});class Ge{static get supportedFormats(){const e=new Set;return Ze.forEach((t,i)=>e.add(i)),e}static async open(e){var t,i;const{url:s,ioConfig:n,source:r,sourceJSON:a}=e;let o=null!==(t=e.datasetFormat)&&void 0!==t?t:null===n||void 0===n?void 0:n.datasetFormat;null==o&&(s.includes(".")?o=s.slice(s.lastIndexOf(".")+1).toUpperCase():"coverage"===(null===r||void 0===r||null===(i=r.type)||void 0===i?void 0:i.toLowerCase())?o="CovJSON":(null===r||void 0===r?void 0:r.extent)&&r.pixelblocks&&(o="MEMORY")),"OVR"===o||"TIF"===o?o="TIFF":"JPG"===o||"JPEG"===o||"JFIF"===o?o="JPG":"COVJSON"===o&&(o="CovJSON"),s.toLowerCase().includes("/imageserver")&&!s.toLowerCase().includes("/wcsserver")&&(o="RasterTileServer");const u={url:s,source:r,sourceJSON:a,datasetFormat:o,ioConfig:null!==n&&void 0!==n?n:{bandIds:null,sampling:null}};if(Object.keys(u).forEach(e=>{null==u[e]&&delete u[e]}),o){if(!this.supportedFormats.has(o))throw new l.A("rasterfactory:open","not a supported format "+o);if("CRF"===o)throw new l.A("rasterfactory:open","cannot open raster: ".concat(s));const t=new(0,Ze.get(o).constructor)(u);return await t.open({signal:e.signal}),t}const c=Array.from(Ze.keys()).filter(e=>"CovJSON"!==e&&"Memory"!==e);let d=0;const f=()=>{if(o=c[d++],!o)return null;if("CRF"===o)return null;const t=new(0,Ze.get(o).constructor)(u);return t.open({signal:e.signal}).then(()=>t).catch(()=>f())};return f()}static register(e,t,i){Ze.has(e.toUpperCase())||Ze.set(e.toUpperCase(),{desc:t,constructor:i})}}var qe=i(81633),We=i(12482),Xe=i(30973),Ye=i(731);let $e=class extends((0,C.dM)((0,F.j)((0,T.q)((0,R.A)((0,O.H)((0,S.d)((0,A.o)((0,M.G)((0,P.e)((0,b.b)((0,_.J)((0,c.P)((0,o.OU)(I.A)))))))))))))){constructor(){super(...arguments),this._primaryRasters=[],this.graphicOrigin=new w(this),this.legendEnabled=!0,this.isReference=null,this.listMode="show",this.sourceJSON=null,this.version=null,this.type="imagery-tile",this.operationalLayerType="ArcGISTiledImageServiceLayer",this.popupEnabled=!0,this.popupTemplate=null,this.screenSizePerspectiveEnabled=!0,this.fields=null,this.source=void 0,this._debouncedSaveOperations=(0,d.sg)(async(e,t,s)=>{const{save:n,saveAs:r}=await i.e(964).then(i.bind(i,20964));switch(e){case 0:return n(this,t);case 1:return r(this,s,t)}})}normalizeCtorArgs(e,t){return"string"==typeof e?(0,n.A)({url:e},t):e}load(e){const t=null!=e?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Image Service"]},e).catch(d.QP).then(()=>this._openRaster(t))),Promise.resolve(this)}set elevationInfo(e){"relative-to-scene"!==(null===e||void 0===e?void 0:e.mode)&&this._set("elevationInfo",e),this._validateElevationInfo(e)}get defaultPopupTemplate(){return this.createPopupTemplate()}get rasterFields(){var e,t;const i=[(0,D.rZ)("Pixel Value"),(0,D.dy)("Raw Pixel Value")],s=null!==(e=null===(t=this.raster)||void 0===t?void 0:t.rasterInfo)&&void 0!==e?e:this.serviceRasterInfo,n=null===s||void 0===s?void 0:s.attributeTable;if(n){const e=(0,D.jC)(n);i.push(...e)}const r=null===s||void 0===s?void 0:s.dataType,a=null===s||void 0===s?void 0:s.multidimensionalInfo;if(("vector-magdir"===r||"vector-uv"===r)&&null!=a){var o;const e=null===(o=a.variables[0].unit)||void 0===o?void 0:o.trim(),t=(0,D.DV)(e),s=(0,D.y6)();i.push(t,s)}if(a){const e=(0,D.AL)(a);i.push(...e)}return i}get renderer(){return super.renderer}set renderer(e){super.renderer=e}createPopupTemplate(e){var t;const{rasterFields:i}=this,s=null!==(t=null===e||void 0===e?void 0:e.visibleFieldNames)&&void 0!==t?t:new Set(i.map(e=>{let{name:t}=e;return t}).filter(e=>e!==D.F_.rawServicePixelValue)),r=(0,Xe.tn)({fields:i,title:this.title},(0,n.A)((0,n.A)({},e),{},{visibleFieldNames:s})),{rasterInfo:a}=this.raster;return null!==r&&void 0!==r&&r.fieldInfos&&a&&(0,D.h4)(r.fieldInfos,a),r}async generateRasterInfo(e,t){var i;if(e=(0,p.PZ)(E.A,e),await this.load(),!e||"none"===(null===(i=e.functionName)||void 0===i?void 0:i.toLowerCase()))return this.serviceRasterInfo;try{const{rasterInfo:i}=await this._openFunctionRaster(e,t);return i}catch(Le){if(Le instanceof l.A)throw Le;throw new l.A("imagery-tile-layer","the given raster function is not supported")}}async save(e){return this._debouncedSaveOperations(0,e)}async saveAs(e,t){return this._debouncedSaveOperations(1,t,e)}supportsWrite(){var e;const t=null!==(e=this._primaryRasters[0])&&void 0!==e?e:this.raster;return!!(this.loaded?"RasterTileServer"===t.datasetFormat&&("Raster"===t.tileType||"Map"===t.tileType):this.url&&/\/ImageServer(\/|\/?$)/i.test(this.url))}write(e,t){if(this.supportsWrite())return super.write(e,t);if(null!==t&&void 0!==t&&t.messages){const e="".concat(t.origin,"/").concat(t.layerContainerType||"operational-layers");t.messages.push(new l.A("layer:unsupported","Layers (".concat(this.title,", ").concat(this.id,") of type '").concat(this.declaredClass,"' are not supported in the context of '").concat(e,"'"),{layer:this}))}return null}async _openRaster(e){var t;let i=!1;if(this.raster)await this._openFromRaster(this.raster,e),i=(0,B.qg)(this.raster),!i&&this.rasterFunction&&(this._primaryRasters=[this.raster],await this._initializeWithFunctionRaster(this.rasterFunction));else{const{url:t,rasterFunction:i,source:s}=this;if(!t&&!s)throw new l.A("imagery-tile-layer:open","missing url or source parameter");s?await this._openFromSource(s,e):i?await this._openFromUrlWithRasterFunction(t,i,e):await this._openFromUrl(t,e)}const s=this.raster.rasterInfo;if(!s)throw new l.A("imagery-tile-layer:load","cannot load resources on "+this.url);if(this._set("serviceRasterInfo",i?s:this._primaryRasters[0].rasterInfo),this._set("spatialReference",s.spatialReference),this.sourceJSON=this.sourceJSON||this.raster.sourceJSON,null!=this.sourceJSON){const e="Map"===this.raster.tileType&&null!=this.sourceJSON.minLOD&&null!=this.sourceJSON.maxLOD?this.sourceJSON:(0,n.A)((0,n.A)({},this.sourceJSON),{},{minScale:0,maxScale:0});this.read(e,{origin:"service"})}else this.read({tileInfo:null===(t=this.serviceRasterInfo)||void 0===t?void 0:t.storageInfo.tileInfo.toJSON()},{origin:"service"});this.title||(this.title=this.raster.datasetName),"Map"===this.raster.tileType&&(this.popupEnabled=!1),this._configDefaultSettings(),this.addHandles((0,f.wB)(()=>this.customParameters,e=>{this.raster&&(this.raster.ioConfig.customFetchParameters=e)}))}async _openFromRaster(e,t){e.rasterInfo||await e.open({signal:t}),this._primaryRasters=(0,B.pb)(e),this.url||(this.url=this._primaryRasters[0].url)}async _openFromUrlWithRasterFunction(e,t,i){const s=[e];t&&(0,qe.UD)(t.toJSON(),s);const r=await Promise.all(s.map(e=>Ge.open({url:e,sourceJSON:this.sourceJSON,ioConfig:(0,n.A)((0,n.A)({sampling:"closest"},this.ioConfig),{},{customFetchParameters:this.customParameters}),signal:i}))),a=r.findIndex(e=>null==e);if(a>-1)throw new l.A("imagery-tile-layer:open","cannot open raster: ".concat(s[a]));return this._primaryRasters=r,this._initializeWithFunctionRaster(t)}async _openFromUrl(e,t){const i=await Ge.open({url:e,sourceJSON:this.sourceJSON,ioConfig:(0,n.A)((0,n.A)({sampling:"closest"},this.ioConfig),{},{customFetchParameters:this.customParameters}),signal:t});if(null==i)throw new l.A("imagery-tile-layer:open","cannot open raster: ".concat(e));this._primaryRasters=[i],this.raster=i}async _openFromSource(e,t){var i;const s="the tiled imagery data source is not supported",r="coverage"===(null===(i=e.type)||void 0===i?void 0:i.toLowerCase())?"CovJSON":e.extent&&e.pixelBlock?"MEMORY":null;if(!r)throw new l.A("imagery-tile-layer:open",s);"MEMORY"===r&&(e=(0,n.A)((0,n.A)({},e),{},{pixelBlock:void 0,pixelBlocks:[e.pixelBlock]}));const a=await Ge.open({url:"",source:e,datasetFormat:r,ioConfig:(0,n.A)((0,n.A)({sampling:"closest"},this.ioConfig),{},{customFetchParameters:this.customParameters}),signal:t});if(null==a)throw new l.A("imagery-tile-layer:open",s);this._primaryRasters=[a],this.rasterFunction?await this._initializeWithFunctionRaster(this.rasterFunction):this.raster=a}async _openFunctionRaster(e,t){var i,s;const n={raster:this._primaryRasters[0]};this._primaryRasters.length>1&&this._primaryRasters.forEach(e=>n[e.url]=e);const r=(0,qe.vt)(null!==(i=null===(s=e.functionDefinition)||void 0===s?void 0:s.toJSON())&&void 0!==i?i:e.toJSON(),n),a=new L.A({rasterFunction:r});return await a.open(t),a}async _initializeWithFunctionRaster(e,t){try{this.raster=await this._openFunctionRaster(e,t)}catch(Le){Le instanceof l.A&&u.A.getLogger(this).error("imagery-tile-layer:open",Le.message),u.A.getLogger(this).warn("imagery-tile-layer:open","the raster function cannot be applied and is removed"),this._set("rasterFunction",null),this.raster=this._primaryRasters[0]}}_validateElevationInfo(e){(0,We.XF)(u.A.getLogger(this),(0,We.$7)("ImageryTile layers","relative-to-scene",e)),(0,We.XF)(u.A.getLogger(this),(0,We.tW)("ImageryTile layers",e))}};(0,r.Cg)([(0,h.MZ)({clonable:!1})],$e.prototype,"_primaryRasters",void 0),(0,r.Cg)([(0,h.MZ)({type:Ye.A,value:null,json:{name:"layerDefinition.elevationInfo",write:!0,origins:{"portal-item":{read:!1,write:!1},"web-map":{read:!1,write:!1}}}})],$e.prototype,"elevationInfo",null),(0,r.Cg)([(0,h.MZ)({readOnly:!0,clonable:!1})],$e.prototype,"graphicOrigin",void 0),(0,r.Cg)([(0,h.MZ)(k.fV)],$e.prototype,"legendEnabled",void 0),(0,r.Cg)([(0,h.MZ)({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],$e.prototype,"isReference",void 0),(0,r.Cg)([(0,h.MZ)({type:["show","hide"]})],$e.prototype,"listMode",void 0),(0,r.Cg)([(0,h.MZ)({json:{read:!0,write:!0}})],$e.prototype,"blendMode",void 0),(0,r.Cg)([(0,h.MZ)({type:E.A,json:{name:"renderingRule",write:!0}})],$e.prototype,"rasterFunction",void 0),(0,r.Cg)([(0,h.MZ)()],$e.prototype,"sourceJSON",void 0),(0,r.Cg)([(0,h.MZ)({readOnly:!0,json:{origins:{service:{read:{source:"currentVersion"}}}}})],$e.prototype,"version",void 0),(0,r.Cg)([(0,h.MZ)({readOnly:!0,json:{read:!1}})],$e.prototype,"type",void 0),(0,r.Cg)([(0,h.MZ)({type:["ArcGISTiledImageServiceLayer"]})],$e.prototype,"operationalLayerType",void 0),(0,r.Cg)([(0,h.MZ)({type:Boolean,value:!0,json:{read:{source:"disablePopup",reader:(e,t)=>!t.disablePopup},write:{target:"disablePopup",overridePolicy(){return{enabled:!this.loaded||"Raster"===this.raster.tileType}},writer(e,t,i){t[i]=!e}}}})],$e.prototype,"popupEnabled",void 0),(0,r.Cg)([(0,h.MZ)({type:a.A,json:{read:{source:"popupInfo"},write:{target:"popupInfo",overridePolicy(){return{enabled:!this.loaded||"Raster"===this.raster.tileType}}}}})],$e.prototype,"popupTemplate",void 0),(0,r.Cg)([(0,h.MZ)({readOnly:!0})],$e.prototype,"defaultPopupTemplate",null),(0,r.Cg)([(0,h.MZ)(k.PY)],$e.prototype,"screenSizePerspectiveEnabled",void 0),(0,r.Cg)([(0,h.MZ)({readOnly:!0,type:[N.A]})],$e.prototype,"fields",void 0),(0,r.Cg)([(0,h.MZ)({readOnly:!0,type:[N.A]})],$e.prototype,"rasterFields",null),(0,r.Cg)([(0,h.MZ)({constructOnly:!0})],$e.prototype,"source",void 0),$e=(0,r.Cg)([(0,g.$)("esri.layers.ImageryTileLayer")],$e);const Ke=$e},47594:(e,t,i)=>{i.d(t,{E9:()=>m,Tw:()=>h,X6:()=>p});var s=i(89379),n=i(3825),r=i(76797),a=i(19247),o=i(13312),l=i(23032),u=i(49653),c=i(54994),d=i(77725);async function f(e,t,i){var f,h,p,m,g,y,v,x,w,I;const b=(0,c.Dl)(e),{rasterFunction:C,sourceJSON:S}=t||{},A=C?JSON.stringify(C.rasterFunctionDefinition||C):null,T=(0,c.lF)((0,s.A)((0,s.A)({},b.query),{},{renderingRule:A,f:"json"})),R=(0,c.jV)(T,i);e=b.path;const M=S||await(0,n.A)(e,R).then(e=>e.data),O=M.hasRasterAttributeTable?(0,n.A)("".concat(e,"/rasterAttributeTable"),R):null,_=M.hasColormap?(0,n.A)("".concat(e,"/colormap"),R):null,F=M.hasHistograms?(0,n.A)("".concat(e,"/histograms"),R):null,P=M.currentVersion>=10.3?(0,n.A)("".concat(e,"/keyProperties"),R):null,k=M.hasMultidimensions?(0,n.A)("".concat(e,"/multidimensionalInfo"),R):null,N=await Promise.allSettled([O,_,F,P,k]);let D=null;if(M.minValues&&M.minValues.length===M.bandCount){D=[];for(let e=0;e<M.minValues.length;e++)D.push({min:M.minValues[e],max:M.maxValues[e],avg:M.meanValues[e],stddev:M.stdvValues[e]})}const E=r.A.fromJSON(M.extent),B=Math.ceil(E.width/M.pixelSizeX-.1),L=Math.ceil(E.height/M.pixelSizeY-.1),J=o.A.fromJSON(M.spatialReference||M.extent.spatialReference),z="fulfilled"===N[0].status?null===(f=N[0].value)||void 0===f?void 0:f.data:null,V=null!==z&&void 0!==z&&null!==(h=z.features)&&void 0!==h&&h.length?d.A.fromJSON(z):null,U="fulfilled"===N[1].status?null===(p=N[1].value)||void 0===p?void 0:p.data.colormap:null,H=null!==U&&void 0!==U&&U.length?U:null,j="fulfilled"===N[2].status?null===(m=N[2].value)||void 0===m?void 0:m.data.histograms:null,Z=null!==j&&void 0!==j&&null!==(g=j[0])&&void 0!==g&&null!==(g=g.counts)&&void 0!==g&&g.length?j:null,G="fulfilled"===N[3].status&&null!==(y=null===(v=N[3].value)||void 0===v?void 0:v.data)&&void 0!==y?y:{},q="fulfilled"===N[4].status?null===(x=N[4].value)||void 0===x?void 0:x.data.multidimensionalInfo:null,W=null!==q&&void 0!==q&&null!==(w=q.variables)&&void 0!==w&&w.length?q:null;W&&W.variables.forEach(e=>{var t,i;null!==(t=e.statistics)&&void 0!==t&&t.length&&e.statistics.forEach(e=>{e.avg=e.mean,e.stddev=e.standardDeviation}),null===(i=e.dimensions)||void 0===i||i.forEach(e=>{"StdTime"!==e.name||e.recurring||e.unit||(e.unit="ISO8601")})});const{defaultVariable:X,serviceDataType:Y}=M;X&&X!==G.DefaultVariable&&(G.DefaultVariable=X),(null===Y||void 0===Y?void 0:Y.includes("esriImageServiceDataTypeVector"))&&!Y.includes(G.DataType)&&(G.DataType=Y.replace("esriImageServiceDataType",""));let $=M.noDataValue;(null===(I=M.noDataValues)||void 0===I?void 0:I.length)&&M.noDataValues.some(e=>e!==$)&&($=M.noDataValues);const K=M.transposeInfo?new u.A({blockWidth:256,blockHeight:256,pyramidBlockWidth:256,pyramidBlockHeight:256,pyramidScalingFactor:2,compression:"lerc",origin:new a.A({x:M.extent.xmin,y:M.extent.ymax,spatialReference:J}),firstPyramidLevel:1,maximumPyramidLevel:Math.max(0,Math.round(Math.log(Math.max(B,L))/Math.LN2-8)),transposeInfo:M.transposeInfo}):void 0;return new l.A({width:B,height:L,bandCount:M.bandCount,extent:r.A.fromJSON(M.extent),spatialReference:J,pixelSize:new a.A({x:M.pixelSizeX,y:M.pixelSizeY,spatialReference:J}),pixelType:M.pixelType.toLowerCase(),statistics:D,attributeTable:V,colormap:H,histograms:Z,keyProperties:G,noDataValue:$,multidimensionalInfo:W,storageInfo:K})}function h(e,t,i){return f(e,{sourceJSON:t},i)}function p(e,t,i){return f(e,{rasterFunction:t},i)}function m(e,t){e.attributeTable||(t.hasRasterAttributeTable=!1),e.histograms||(t.hasHistograms=!1),e.colormap||(t.hasColormap=!1),e.multidimensionalInfo||(t.hasMultidimensions=!1)}},75116:(e,t,i)=>{i.d(t,{A:()=>o});var s=i(6326),n=i(42553),r=i(46053),a=(i(81806),i(76460),i(47249),i(87990));let o=class extends n.o{get affectsPixelSize(){return!1}forwardTransform(e){return e}inverseTransform(e){return e}};(0,s.Cg)([(0,r.MZ)()],o.prototype,"affectsPixelSize",null),(0,s.Cg)([(0,r.MZ)({json:{write:!0}})],o.prototype,"spatialReference",void 0),o=(0,s.Cg)([(0,a.$)("esri.layers.support.rasterTransforms.BaseRasterTransform")],o)}}]);
//# sourceMappingURL=7197.f77c6827.chunk.js.map